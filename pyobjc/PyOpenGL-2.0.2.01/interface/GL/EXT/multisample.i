/*
# AUTOGENERATED DO NOT EDIT

# If you edit this file, delete the AUTOGENERATED line to prevent re-generation
# BUILD api_versions [0x001]
*/

%module multisample

#define __version__ "$Revision: 1.1.2.1 $"
#define __date__ "$Date: 2004/11/15 07:38:07 $"
#define __api_version__ API_VERSION
#define __author__ "PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>"
#define __doc__ ""

%{
/**
 *
 * GL.EXT.multisample Module for PyOpenGL
 * 
 * Authors: PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>
 * 
***/
%}

%include util.inc
%include gl_exception_handler.inc

%{
#ifdef CGL_PLATFORM
# include <OpenGL/glext.h>
#else
# include <GL/glext.h>
#endif

#if !EXT_DEFINES_PROTO || !defined(GL_EXT_multisample)
DECLARE_VOID_EXT(glSampleMaskEXT, (GLclampf value, GLboolean invert), (value, invert))
DECLARE_VOID_EXT(glSamplePatternEXT, (GLenum pattern), (pattern))
#endif
%}

/* FUNCTION DECLARATIONS */
void glSampleMaskEXT(GLclampf value, GLboolean invert);
DOC(glSampleMaskEXT, "glSampleMaskEXT(value, invert)")
void glSamplePatternEXT(GLenum pattern);
DOC(glSamplePatternEXT, "glSamplePatternEXT(pattern)")

/* CONSTANT DECLARATIONS */
#define             GL_MULTISAMPLE_EXT 0x809D
#define    GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
#define     GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
#define             GL_SAMPLE_MASK_EXT 0x80A0
#define                   GL_1PASS_EXT 0x80A1
#define                 GL_2PASS_0_EXT 0x80A2
#define                 GL_2PASS_1_EXT 0x80A3
#define                 GL_4PASS_0_EXT 0x80A4
#define                 GL_4PASS_1_EXT 0x80A5
#define                 GL_4PASS_2_EXT 0x80A6
#define                 GL_4PASS_3_EXT 0x80A7
#define          GL_SAMPLE_BUFFERS_EXT 0x80A8
#define                 GL_SAMPLES_EXT 0x80A9
#define       GL_SAMPLE_MASK_VALUE_EXT 0x80AA
#define      GL_SAMPLE_MASK_INVERT_EXT 0x80AB
#define          GL_SAMPLE_PATTERN_EXT 0x80AC
#define         GL_MULTISAMPLE_BIT_EXT 0x20000000


%{
static char *proc_names[] =
{
#if !EXT_DEFINES_PROTO || !defined(GL_EXT_multisample)
"glSampleMaskEXT",
"glSamplePatternEXT",
#endif
	NULL
};

#define glInitMultisampleEXT() InitExtension("GL_EXT_multisample", proc_names)
%}

int glInitMultisampleEXT();
DOC(glInitMultisampleEXT, "glInitMultisampleEXT() -> bool")

%{
PyObject *__info()
{
	if (glInitMultisampleEXT())
	{
		PyObject *info = PyList_New(0);
		return info;
	}
	
	Py_INCREF(Py_None);
	return Py_None;
}
%}

PyObject *__info();

