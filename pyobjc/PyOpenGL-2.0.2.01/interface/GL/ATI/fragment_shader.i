/*
# AUTOGENERATED DO NOT EDIT

# If you edit this file, delete the AUTOGENERATED line to prevent re-generation
# BUILD api_versions [0x001]
*/

%module fragment_shader

#define __version__ "$Revision: 1.1.2.1 $"
#define __date__ "$Date: 2004/11/15 07:38:07 $"
#define __api_version__ API_VERSION
#define __author__ "PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>"
#define __doc__ ""

%{
/**
 *
 * GL.ATI.fragment_shader Module for PyOpenGL
 * 
 * Authors: PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>
 * 
***/
%}

%include util.inc
%include gl_exception_handler.inc

%{
#ifdef CGL_PLATFORM
# include <OpenGL/glext.h>
#else
# include <GL/glext.h>
#endif

#if !EXT_DEFINES_PROTO || !defined(GL_ATI_fragment_shader)
DECLARE_EXT(glGenFragmentShadersATI, GLuint, 0, (GLuint range), (range))
DECLARE_VOID_EXT(glBindFragmentShaderATI, (GLuint id), (id))
DECLARE_VOID_EXT(glDeleteFragmentShaderATI, (GLuint id), (id))
DECLARE_VOID_EXT(glBeginFragmentShaderATI, (), ())
DECLARE_VOID_EXT(glEndFragmentShaderATI, (), ())
DECLARE_VOID_EXT(glPassTexCoordATI, (GLuint dst, GLuint coord, GLenum swizzle), (dst, coord, swizzle))
DECLARE_VOID_EXT(glSampleMapATI, (GLuint dst, GLuint interp, GLenum swizzle), (dst, interp, swizzle))
DECLARE_VOID_EXT(glColorFragmentOp1ATI, (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod), (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod))
DECLARE_VOID_EXT(glColorFragmentOp2ATI, (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod), (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod))
DECLARE_VOID_EXT(glColorFragmentOp3ATI, (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod), (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod))
DECLARE_VOID_EXT(glAlphaFragmentOp1ATI, (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod), (op, dst, dstMod, arg1, arg1Rep, arg1Mod))
DECLARE_VOID_EXT(glAlphaFragmentOp2ATI, (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod), (op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod))
DECLARE_VOID_EXT(glAlphaFragmentOp3ATI, (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod), (op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod))
DECLARE_VOID_EXT(glSetFragmentShaderConstantATI, (GLuint dst, const GLfloat *value), (dst, value))
#endif
%}

/* FUNCTION DECLARATIONS */
GLuint glGenFragmentShadersATI(GLuint range);
DOC(glGenFragmentShadersATI, "glGenFragmentShadersATI(range)")
void glBindFragmentShaderATI(GLuint id);
DOC(glBindFragmentShaderATI, "glBindFragmentShaderATI(id)")
void glDeleteFragmentShaderATI(GLuint id);
DOC(glDeleteFragmentShaderATI, "glDeleteFragmentShaderATI(id)")
void glBeginFragmentShaderATI();
DOC(glBeginFragmentShaderATI, "glBeginFragmentShaderATI()")
void glEndFragmentShaderATI();
DOC(glEndFragmentShaderATI, "glEndFragmentShaderATI()")
void glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle);
DOC(glPassTexCoordATI, "glPassTexCoordATI(dst, coord, swizzle)")
void glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle);
DOC(glSampleMapATI, "glSampleMapATI(dst, interp, swizzle)")
void glColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
DOC(glColorFragmentOp1ATI, "glColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)")
void glColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
DOC(glColorFragmentOp2ATI, "glColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)")
void glColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
DOC(glColorFragmentOp3ATI, "glColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)")
void glAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
DOC(glAlphaFragmentOp1ATI, "glAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod)")
void glAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
DOC(glAlphaFragmentOp2ATI, "glAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)")
void glAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
DOC(glAlphaFragmentOp3ATI, "glAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)")
void glSetFragmentShaderConstantATI(GLuint dst, const GLfloat *value);
DOC(glSetFragmentShaderConstantATI, "glSetFragmentShaderConstantATI(dst, value)")

/* CONSTANT DECLARATIONS */
#define         GL_FRAGMENT_SHADER_ATI 0x8920
#define                   GL_REG_0_ATI 0x8921
#define                   GL_REG_1_ATI 0x8922
#define                   GL_REG_2_ATI 0x8923
#define                   GL_REG_3_ATI 0x8924
#define                   GL_REG_4_ATI 0x8925
#define                   GL_REG_5_ATI 0x8926
#define                   GL_REG_6_ATI 0x8927
#define                   GL_REG_7_ATI 0x8928
#define                   GL_REG_8_ATI 0x8929
#define                   GL_REG_9_ATI 0x892A
#define                  GL_REG_10_ATI 0x892B
#define                  GL_REG_11_ATI 0x892C
#define                  GL_REG_12_ATI 0x892D
#define                  GL_REG_13_ATI 0x892E
#define                  GL_REG_14_ATI 0x892F
#define                  GL_REG_15_ATI 0x8930
#define                  GL_REG_16_ATI 0x8931
#define                  GL_REG_17_ATI 0x8932
#define                  GL_REG_18_ATI 0x8933
#define                  GL_REG_19_ATI 0x8934
#define                  GL_REG_20_ATI 0x8935
#define                  GL_REG_21_ATI 0x8936
#define                  GL_REG_22_ATI 0x8937
#define                  GL_REG_23_ATI 0x8938
#define                  GL_REG_24_ATI 0x8939
#define                  GL_REG_25_ATI 0x893A
#define                  GL_REG_26_ATI 0x893B
#define                  GL_REG_27_ATI 0x893C
#define                  GL_REG_28_ATI 0x893D
#define                  GL_REG_29_ATI 0x893E
#define                  GL_REG_30_ATI 0x893F
#define                  GL_REG_31_ATI 0x8940
#define                   GL_CON_0_ATI 0x8941
#define                   GL_CON_1_ATI 0x8942
#define                   GL_CON_2_ATI 0x8943
#define                   GL_CON_3_ATI 0x8944
#define                   GL_CON_4_ATI 0x8945
#define                   GL_CON_5_ATI 0x8946
#define                   GL_CON_6_ATI 0x8947
#define                   GL_CON_7_ATI 0x8948
#define                   GL_CON_8_ATI 0x8949
#define                   GL_CON_9_ATI 0x894A
#define                  GL_CON_10_ATI 0x894B
#define                  GL_CON_11_ATI 0x894C
#define                  GL_CON_12_ATI 0x894D
#define                  GL_CON_13_ATI 0x894E
#define                  GL_CON_14_ATI 0x894F
#define                  GL_CON_15_ATI 0x8950
#define                  GL_CON_16_ATI 0x8951
#define                  GL_CON_17_ATI 0x8952
#define                  GL_CON_18_ATI 0x8953
#define                  GL_CON_19_ATI 0x8954
#define                  GL_CON_20_ATI 0x8955
#define                  GL_CON_21_ATI 0x8956
#define                  GL_CON_22_ATI 0x8957
#define                  GL_CON_23_ATI 0x8958
#define                  GL_CON_24_ATI 0x8959
#define                  GL_CON_25_ATI 0x895A
#define                  GL_CON_26_ATI 0x895B
#define                  GL_CON_27_ATI 0x895C
#define                  GL_CON_28_ATI 0x895D
#define                  GL_CON_29_ATI 0x895E
#define                  GL_CON_30_ATI 0x895F
#define                  GL_CON_31_ATI 0x8960
#define                     GL_MOV_ATI 0x8961
#define                     GL_ADD_ATI 0x8963
#define                     GL_MUL_ATI 0x8964
#define                     GL_SUB_ATI 0x8965
#define                    GL_DOT3_ATI 0x8966
#define                    GL_DOT4_ATI 0x8967
#define                     GL_MAD_ATI 0x8968
#define                    GL_LERP_ATI 0x8969
#define                     GL_CND_ATI 0x896A
#define                    GL_CND0_ATI 0x896B
#define                GL_DOT2_ADD_ATI 0x896C
#define  GL_SECONDARY_INTERPOLATOR_ATI 0x896D
#define  GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
#define  GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
#define              GL_NUM_PASSES_ATI 0x8970
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
#define  GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
#define     GL_COLOR_ALPHA_PAIRING_ATI 0x8975
#define             GL_SWIZZLE_STR_ATI 0x8976
#define             GL_SWIZZLE_STQ_ATI 0x8977
#define          GL_SWIZZLE_STR_DR_ATI 0x8978
#define          GL_SWIZZLE_STQ_DQ_ATI 0x8979
#define            GL_SWIZZLE_STRQ_ATI 0x897A
#define         GL_SWIZZLE_STRQ_DQ_ATI 0x897B
#define                 GL_RED_BIT_ATI 0x1
#define               GL_GREEN_BIT_ATI 0x2
#define                GL_BLUE_BIT_ATI 0x4
#define                  GL_2X_BIT_ATI 0x1
#define                  GL_4X_BIT_ATI 0x2
#define                  GL_8X_BIT_ATI 0x4
#define                GL_HALF_BIT_ATI 0x8
#define             GL_QUARTER_BIT_ATI 0x10
#define              GL_EIGHTH_BIT_ATI 0x20
#define            GL_SATURATE_BIT_ATI 0x40
#define                GL_COMP_BIT_ATI 0x2
#define              GL_NEGATE_BIT_ATI 0x4
#define                GL_BIAS_BIT_ATI 0x8


%{
static char *proc_names[] =
{
#if !EXT_DEFINES_PROTO || !defined(GL_ATI_fragment_shader)
"glGenFragmentShadersATI",
"glBindFragmentShaderATI",
"glDeleteFragmentShaderATI",
"glBeginFragmentShaderATI",
"glEndFragmentShaderATI",
"glPassTexCoordATI",
"glSampleMapATI",
"glColorFragmentOp1ATI",
"glColorFragmentOp2ATI",
"glColorFragmentOp3ATI",
"glAlphaFragmentOp1ATI",
"glAlphaFragmentOp2ATI",
"glAlphaFragmentOp3ATI",
"glSetFragmentShaderConstantATI",
#endif
	NULL
};

#define glInitFragmentShaderATI() InitExtension("GL_ATI_fragment_shader", proc_names)
%}

int glInitFragmentShaderATI();
DOC(glInitFragmentShaderATI, "glInitFragmentShaderATI() -> bool")

%{
PyObject *__info()
{
	if (glInitFragmentShaderATI())
	{
		PyObject *info = PyList_New(0);
		return info;
	}
	
	Py_INCREF(Py_None);
	return Py_None;
}
%}

PyObject *__info();

