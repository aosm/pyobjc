<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd">
<html
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:mml="http://www.w3.org/1998/Math/MathML"
><head><title>glCallLists</title><link rel="stylesheet" href="style.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.59.1"/><link rel="home" href="index.xml" title="PyOpenGL 2.0.1.09 Man Pages"/><link rel="up" href="reference-GL.xml" title="GL"/><link rel="previous" href="glCallList.3G.xml" title="glCallList"/><link rel="next" href="glClear.3G.xml" title="glClear"/></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">glCallLists</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="glCallList.3G.xml">Prev</a> </td><th width="60%" align="center">GL</th><td width="20%" align="right"> <a accesskey="n" href="glClear.3G.xml">Next</a></td></tr></table><hr/></div><div class="refentry" lang="en"><a name="glCallLists.3G"/><div class="titlepage"/><div class="refnamediv"><a name="glCallLists.3G-name"/><h2>Name</h2><p>glCallLists &#8212; execute a list of display lists</p></div><div class="refsynopsisdiv"><a name="glCallLists.3G-c_spec"/><h2>C Specification</h2><table class="funcprototype" border="0" cellpadding="0" cellspacing="0"><tr><td valign="top"><code>void <tt>glCallLists</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLsizei <i><tt>n</tt></i>, GLenum <i><tt>type</tt></i>, const GLvoid *<i><tt>lists</tt></i>);</code></td></tr></table></div><div class="refsynopsisdiv"><a name="glCallLists.3G-python_spec"/><h2>Python Specification</h2><table class="funcprototype" border="0" cellpadding="0" cellspacing="0"><tr><td valign="top"><code><tt>glCallLists</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>lists</tt></i>[]) &#8594; <tt>None</tt></code></td></tr></table></div><div class="refsect1" lang="en"><a name="glCallLists.3G-parameters"/><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><i><tt>n</tt></i></span></dt><dd>
						Specifies the number of display lists to be executed.
					</dd><dt><span class="term"><i><tt>type</tt></i></span></dt><dd>
						Specifies the type of values in <i><tt>lists</tt></i>. Symbolic constants
						<tt>GL_BYTE</tt>, <tt>GL_UNSIGNED_BYTE</tt>, <tt>GL_SHORT</tt>,
						<tt>GL_UNSIGNED_SHORT</tt>, <tt>GL_INT</tt>, <tt>GL_UNSIGNED_INT</tt>,
						<tt>GL_FLOAT</tt>, <tt>GL_2_BYTES</tt>, <tt>GL_3_BYTES</tt>, and
						<tt>GL_4_BYTES</tt> are accepted.
					</dd><dt><span class="term"><i><tt>lists</tt></i></span></dt><dd>
						Specifies the address of an array of name offsets in the display list. The pointer type is void because the
						offsets can be bytes, shorts, ints, or floats, depending on the value of <i><tt>type</tt></i>.
					</dd></dl></div></div><div class="refsect1" lang="en"><a name="glCallLists.3G-description"/><h2>Description</h2><p>
			<tt>glCallLists</tt> causes each display list in the list of names passed as <i><tt>lists</tt></i>
			to be executed. As a result, the commands saved in each display list are executed in order, just as if they were called
			without using a display list. Names of display lists that have not been defined are ignored.
		</p><p>
			<tt>glCallLists</tt> provides an efficient means for executing more than one display list.
			<i><tt>type</tt></i> allows lists with various name formats to be accepted. The formats are as follows:
		</p><div class="variablelist"><dl><dt><span class="term"><tt>GL_BYTE</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of signed bytes, each in the range -128 through 127.
					</dd><dt><span class="term"><tt>GL_UNSIGNED_BYTE</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of unsigned bytes, each in the range 0 through 255.
					</dd><dt><span class="term"><tt>GL_SHORT</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of signed two-byte integers, each in the range -32768
						through 32767.
					</dd><dt><span class="term"><tt>GL_UNSIGNED_SHORT</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of unsigned two-byte integers, each in the range 0
						through 65535.
					</dd><dt><span class="term"><tt>GL_INT</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of signed four-byte integers.
					</dd><dt><span class="term"><tt>GL_UNSIGNED_INT</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of unsigned four-byte integers.
					</dd><dt><span class="term"><tt>GL_FLOAT</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of four-byte floating-point values.
					</dd><dt><span class="term"><tt>GL_2_BYTES</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of unsigned bytes. Each pair of bytes specifies a
						single display-list name. The value of the pair is computed as 256 times the unsigned value of the first
						byte plus the unsigned value of the second byte.
					</dd><dt><span class="term"><tt>GL_3_BYTES</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of unsigned bytes. Each triplet of bytes specifies a
						single display-list name. The value of the triplet is computed as 65536 times the unsigned value of the
						first byte, plus 256 times the unsigned value of the second byte, plus the unsigned value of the third
						byte.
					</dd><dt><span class="term"><tt>GL_4_BYTES</tt></span></dt><dd>
						<i><tt>lists</tt></i> is treated as an array of unsigned bytes. Each quadruplet of bytes specifies a
						single display-list name. The value of the quadruplet is computed as 16777216 times the unsigned value of
						the first byte, plus 65536 times the unsigned value of the second byte, plus 256 times the unsigned value
						of the third byte, plus the unsigned value of the fourth byte.
					</dd></dl></div><p>
			The list of display-list names is not <tt>NULL</tt>-terminated. Rather, <i><tt>n</tt></i> specifies
			how many names are to be taken from <i><tt>lists</tt></i>.
		</p><p>
			An additional level of indirection is made available with the <a href="glListBase.3G.xml"><tt>glListBase</tt></a>
			command, which specifies an unsigned offset that is added to each display-list name specified in
			<i><tt>lists</tt></i> before that display list is executed.
		</p><p>
			<tt>glCallLists</tt> can appear inside a display list. To avoid the possibility of infinite recursion
			resulting from display lists calling one another, a limit is placed on the nesting level of display lists during
			display-list execution. This limit must be at least 64, and it depends on the implementation.
		</p><p>
			GL state is not saved and restored across a call to <tt>glCallLists</tt>. Thus, changes made to GL state
			during the execution of the display lists remain after execution is completed. Use <a href="glPushAttrib.3G.xml"><tt>glPushAttrib</tt></a>, <a href="glPushAttrib.3G.xml"><tt>glPopAttrib</tt></a>, <a href="glPushMatrix.3G.xml"><tt>glPushMatrix</tt></a>, and <a href="glPushMatrix.3G.xml"><tt>glPopMatrix</tt></a> to preserve GL
			state across <tt>glCallLists</tt> calls.
		</p></div><div class="refsect1" lang="en"><a name="glCallLists.3G-notes"/><h2>Notes</h2><p>
			Display lists can be executed between a call to <a href="glBegin.3G.xml"><tt>glBegin</tt></a> and the corresponding
			call to <a href="glBegin.3G.xml"><tt>glEnd</tt></a>, as long as the display list includes only commands that are
			allowed in this interval.
		</p></div><div class="refsect1" lang="en"><a name="glCallLists.3G-errors"/><h2>Errors</h2><p>
			<tt>GL_INVALID_VALUE</tt> is generated if <i><tt>n</tt></i> is negative.
		</p><p>
			<tt>GL_INVALID_ENUM</tt> is generated if <i><tt>type</tt></i> is not one of
			<tt>GL_BYTE</tt>, <tt>GL_UNSIGNED_BYTE</tt>, <tt>GL_SHORT</tt>,
			<tt>GL_UNSIGNED_SHORT</tt>, <tt>GL_INT</tt>, <tt>GL_UNSIGNED_INT</tt>,
			<tt>GL_FLOAT</tt>, <tt>GL_2_BYTES</tt>, <tt>GL_3_BYTES</tt>,
			<tt>GL_4_BYTES</tt>.
		</p></div><div class="refsect1" lang="en"><a name="glCallLists.3G-associated_gets"/><h2>Associated Gets</h2><p>
			<tt>glGet</tt> with argument <tt>GL_LIST_BASE</tt>
		</p><p>
			<tt>glGet</tt> with argument <tt>GL_MAX_LIST_NESTING</tt>
		</p><p>
			<a href="glIsList.3G.xml"><tt>glIsList</tt></a>
		</p></div><div class="refsect1" lang="en"><a name="glCallLists.3G-see_also"/><h2>See Also</h2><p>
			<span class="simplelist"><a href="glCallList.3G.xml">glCallList</a>, <a href="glDeleteLists.3G.xml">glDeleteLists</a>, <a href="glGenLists.3G.xml">glGenLists</a>, <a href="glListBase.3G.xml">glListBase</a>, <a href="glNewList.3G.xml">glNewList</a>, <a href="glPushAttrib.3G.xml">glPushAttrib</a>, <a href="glPushMatrix.3G.xml">glPushMatrix</a></span>
		</p></div></div><div class="navfooter"><hr/><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="glCallList.3G.xml">Prev</a> </td><td width="20%" align="center"><a accesskey="u" href="reference-GL.xml">Up</a></td><td width="40%" align="right"> <a accesskey="n" href="glClear.3G.xml">Next</a></td></tr><tr><td width="40%" align="left" valign="top">glCallList </td><td width="20%" align="center"><a accesskey="h" href="index.xml">Home</a></td><td width="40%" align="right" valign="top"> glClear</td></tr></table></div></body></html>