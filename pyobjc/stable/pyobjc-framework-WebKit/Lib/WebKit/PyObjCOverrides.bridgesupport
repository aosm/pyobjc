<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
  <struct name='NPAnyCallbackStruct' type='' />
  <struct name='NPByteRange' type='{_NPByteRange="offset"i"length"I"next"^{_NPByteRange}}' type64='{_NPByteRange="offset"i"length"I"next"^{_NPByteRange}}' />
  <struct name='NPClass' type='{NPClass="structVersion"I"allocate"^?"deallocate"^?"invalidate"^?"hasMethod"^?"invoke"^?"invokeDefault"^?"hasProperty"^?"getProperty"^?"setProperty"^?"removeProperty"^?}' type64='{NPClass="structVersion"I"allocate"^?"deallocate"^?"invalidate"^?"hasMethod"^?"invoke"^?"invokeDefault"^?"hasProperty"^?"getProperty"^?"setProperty"^?"removeProperty"^?}' />
  <struct name='NPEmbedPrint' type='{_NPEmbedPrint="window"{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}"platformPrint"^v}' type64='{_NPEmbedPrint="window"{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}"platformPrint"^v}' />
  <struct name='NPEvent' type='{EventRecord="what"S"message"L"when"I"where"{Point="v"s"h"s}"modifiers"S}' type64='{EventRecord="what"S"message"Q"when"I"where"{Point="v"s"h"s}"modifiers"S}' />
  <struct name='NPFullPrint' type='{_NPFullPrint="pluginPrinted"C"printOne"C"platformPrint"^v}' type64='{_NPFullPrint="pluginPrinted"C"printOne"C"platformPrint"^v}' />
  <struct name='NPNetscapeFuncs' type='{_NPNetscapeFuncs="size"S"version"S"geturl"^?"posturl"^?"requestread"^?"newstream"^?"write"^?"destroystream"^?"status"^?"uagent"^?"memalloc"^?"memfree"^?"memflush"^?"reloadplugins"^?"getJavaEnv"^?"getJavaPeer"^?"geturlnotify"^?"posturlnotify"^?"getvalue"^?"setvalue"^?"invalidaterect"^?"invalidateregion"^?"forceredraw"^?"getstringidentifier"^?"getstringidentifiers"^?"getintidentifier"^?"identifierisstring"^?"utf8fromidentifier"^?"intfromidentifier"^?"createobject"^?"retainobject"^?"releaseobject"^?"invoke"^?"invokeDefault"^?"evaluate"^?"getproperty"^?"setproperty"^?"removeproperty"^?"hasproperty"^?"hasmethod"^?"releasevariantvalue"^?"setexception"^?}' type64='{_NPNetscapeFuncs="size"S"version"S"geturl"^?"posturl"^?"requestread"^?"newstream"^?"write"^?"destroystream"^?"status"^?"uagent"^?"memalloc"^?"memfree"^?"memflush"^?"reloadplugins"^?"getJavaEnv"^?"getJavaPeer"^?"geturlnotify"^?"posturlnotify"^?"getvalue"^?"setvalue"^?"invalidaterect"^?"invalidateregion"^?"forceredraw"^?"getstringidentifier"^?"getstringidentifiers"^?"getintidentifier"^?"identifierisstring"^?"utf8fromidentifier"^?"intfromidentifier"^?"createobject"^?"retainobject"^?"releaseobject"^?"invoke"^?"invokeDefault"^?"evaluate"^?"getproperty"^?"setproperty"^?"removeproperty"^?"hasproperty"^?"hasmethod"^?"releasevariantvalue"^?"setexception"^?}' />
  <struct name='NPObject' type='{NPObject="_class"^{NPClass}"referenceCount"I}' type64='{NPObject="_class"^{NPClass}"referenceCount"I}' />
  <struct name='NPP_t' type='{_NPP="pdata"^v"ndata"^v}' type64='{_NPP="pdata"^v"ndata"^v}' />
  <struct name='NPPluginFuncs' type='{_NPPluginFuncs="size"S"version"S"newp"^?"destroy"^?"setwindow"^?"newstream"^?"destroystream"^?"asfile"^?"writeready"^?"write"^?"print"^?"event"^?"urlnotify"^?"javaClass"^v"getvalue"^?"setvalue"^?}' type64='{_NPPluginFuncs="size"S"version"S"newp"^?"destroy"^?"setwindow"^?"newstream"^?"destroystream"^?"asfile"^?"writeready"^?"write"^?"print"^?"event"^?"urlnotify"^?"javaClass"^v"getvalue"^?"setvalue"^?}' />
  <struct name='NPPrint' type='{_NPPrint="mode"S"print"(?="fullPrint"{_NPFullPrint="pluginPrinted"C"printOne"C"platformPrint"^v}"embedPrint"{_NPEmbedPrint="window"{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}"platformPrint"^v})}' type64='{_NPPrint="mode"S"print"(?="fullPrint"{_NPFullPrint="pluginPrinted"C"printOne"C"platformPrint"^v}"embedPrint"{_NPEmbedPrint="window"{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}"platformPrint"^v})}' />
  <struct name='NPPrintCallbackStruct' type='' />
  <struct name='NPRect' type='{_NPRect="top"S"left"S"bottom"S"right"S}' type64='{_NPRect="top"S"left"S"bottom"S"right"S}' />
  <struct name='NPSavedData' type='{_NPSavedData="len"i"buf"^v}' type64='{_NPSavedData="len"i"buf"^v}' />
  <struct name='NPSetWindowCallbackStruct' type='' />
  <struct name='NPStream' type='{_NPStream="pdata"^v"ndata"^v"url"*"end"I"lastmodified"I"notifyData"^v}' type64='{_NPStream="pdata"^v"ndata"^v"url"*"end"I"lastmodified"I"notifyData"^v}' />
  <struct name='NPString' type='{_NPString="UTF8Characters"*"UTF8Length"I}' type64='{_NPString="UTF8Characters"*"UTF8Length"I}' />
  <struct name='NPVariant' type='{_NPVariant="type"i"value"(?="boolValue"B"intValue"i"doubleValue"d"stringValue"{_NPString="UTF8Characters"*"UTF8Length"I}"objectValue"^{NPObject})}' type64='{_NPVariant="type"i"value"(?="boolValue"B"intValue"i"doubleValue"d"stringValue"{_NPString="UTF8Characters"*"UTF8Length"I}"objectValue"^{NPObject})}' />
  <struct name='NPWindow' type='{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}' type64='{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}' />
  <struct name='NP_CGContext' type='{NP_CGContext="context"^{CGContext}"window"^{OpaqueWindowPtr}}' type64='{NP_CGContext="context"^{CGContext}"window"^{OpaqueWindowPtr}}' />
  <struct name='NP_GLContext' type='{NP_GLContext="context"^{_CGLContextObject}"window"^{OpaqueWindowPtr}}' type64='{NP_GLContext="context"^{_CGLContextObject}"window"^{OpaqueWindowPtr}}' />
  <opaque name='DOMObjectInternal*' type='^{DOMObjectInternal=}' type64='^{DOMObjectInternal=}' />
  <function name='HIWebViewCreate'>
    <retval type='l' type64='i' />
    <arg already_retained='true' type='^^{OpaqueControlRef}' type_modifier='o' />
  </function>
  <function name='HIWebViewCreateWithClass'>
    <retval type='l' type64='i' />
    <arg type='#' />
    <arg already_retained='true' type='^^{OpaqueControlRef}' type_modifier='o' />
  </function>
  <function name='HIWebViewGetWebView'>
    <retval type='@' />
    <arg already_retained='true' type='^{OpaqueControlRef=}' type_modifier='o' />
  </function>
  <function name='NPN_CreateObject'>
    <retval type='^{NPObject=^{NPClass}I}' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPClass=I^?^?^?^?^?^?^?^?^?^?}' />
  </function>
  <function name='NPN_DestroyStream'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='s' />
  </function>
  <function name='NPN_Evaluate'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^{_NPString=*I}' type64='^{_NPString=*I}' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_ForceRedraw'>
    <retval type='v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
  </function>
  <function name='NPN_GetJavaEnv'>
    <retval type='^v' type64='^v' />
  </function>
  <function name='NPN_GetJavaPeer'>
    <retval type='^v' type64='^v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
  </function>
  <function name='NPN_GetProperty'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_GetStringIdentifier'>
    <retval type='^v' />
    <arg type='r*' type64='r*' />
  </function>
  <function name='NPN_GetStringIdentifiers'>
    <retval type='v' />
    <arg type='r^*' type64='r^*' />
    <arg type='i' />
    <arg type='^^v' type64='^^v' />
  </function>
  <function name='NPN_GetURL'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='r*' type64='r*' />
    <arg type='r*' type64='r*' />
  </function>
  <function name='NPN_GetURLNotify'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='r*' type64='r*' />
    <arg type='r*' type64='r*' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_GetValue'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_HasMethod'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
  </function>
  <function name='NPN_HasProperty'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
  </function>
  <function name='NPN_InvalidateRect'>
    <retval type='v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPRect=SSSS}' type64='^{_NPRect=SSSS}' />
  </function>
  <function name='NPN_InvalidateRegion'>
    <retval type='v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^v' />
  </function>
  <function name='NPN_Invoke'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
    <arg type='I' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_InvokeDefault'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
    <arg type='I' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_MemAlloc'>
    <retval type='^v' type64='^v' />
    <arg type='I' />
  </function>
  <function name='NPN_MemFree'>
    <retval type='v' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_NewStream'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='*' type64='*' />
    <arg type='r*' type64='r*' />
    <arg type='^^{_NPStream}' type64='^^{_NPStream}' />
  </function>
  <function name='NPN_PostURL'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='r*' type64='r*' />
    <arg type='r*' type64='r*' />
    <arg type='I' />
    <arg type='r*' type64='r*' />
    <arg type='C' />
  </function>
  <function name='NPN_PostURLNotify'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='r*' type64='r*' />
    <arg type='r*' type64='r*' />
    <arg type='I' />
    <arg type='r*' type64='r*' />
    <arg type='C' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_ReleaseObject'>
    <retval type='v' />
    <arg type='^{NPObject=^{NPClass}I}' />
  </function>
  <function name='NPN_ReleaseVariantValue'>
    <retval type='v' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_ReloadPlugins'>
    <retval type='v' />
    <arg type='C' />
  </function>
  <function name='NPN_RemoveProperty'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
  </function>
  <function name='NPN_RequestRead'>
    <retval type='s' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='^{_NPByteRange=iI^{_NPByteRange}}' type64='^{_NPByteRange=iI^{_NPByteRange}}' />
  </function>
  <function name='NPN_RetainObject'>
    <retval type='^{NPObject=^{NPClass}I}' />
    <arg type='^{NPObject=^{NPClass}I}' />
  </function>
  <function name='NPN_SetException'>
    <retval type='v' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='r*' type64='r*' />
  </function>
  <function name='NPN_SetProperty'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_SetValue'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_Status'>
    <retval type='v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='r*' type64='r*' />
  </function>
  <function name='NPN_UTF8FromIdentifier'>
    <retval type='r*' type64='r*' />
    <arg type='^v' />
  </function>
  <function name='NPN_UserAgent'>
    <retval type='r*' type64='r*' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
  </function>
  <function name='NPN_Version'>
    <retval type='v' />
    <arg type='^i' type64='^i' />
    <arg type='^i' type64='^i' />
    <arg type='^i' type64='^i' />
    <arg type='^i' type64='^i' />
  </function>
  <function name='NPN_Write'>
    <retval type='i' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_Destroy'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^^{_NPSavedData}' type64='^^{_NPSavedData}' />
  </function>
  <function name='NPP_DestroyStream'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='s' />
  </function>
  <function name='NPP_GetJavaClass'>
    <retval type='^v' type64='^v' />
  </function>
  <function name='NPP_GetMIMEDescription'>
    <retval type='r*' type64='r*' />
  </function>
  <function name='NPP_GetValue'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_HandleEvent'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_New'>
    <retval type='s' />
    <arg type='*' type64='*' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='S' />
    <arg type='s' />
    <arg type='^*' type64='^*' />
    <arg type='^*' type64='^*' />
    <arg type='^{_NPSavedData=i^v}' type64='^{_NPSavedData=i^v}' />
  </function>
  <function name='NPP_NewStream'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='*' type64='*' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='C' />
    <arg type='^S' type64='^S' />
  </function>
  <function name='NPP_Print'>
    <retval type='v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPPrint=S(?={_NPFullPrint=CC^v}{_NPEmbedPrint={_NPWindow=^viiII{_NPRect=SSSS}i}^v})}' type64='^{_NPPrint=S(?={_NPFullPrint=CC^v}{_NPEmbedPrint={_NPWindow=^viiII{_NPRect=SSSS}i}^v})}' />
  </function>
  <function name='NPP_SetValue'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_SetWindow'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPWindow=^viiII{_NPRect=SSSS}i}' type64='^{_NPWindow=^viiII{_NPRect=SSSS}i}' />
  </function>
  <function name='NPP_Shutdown'>
    <retval type='v' />
  </function>
  <function name='NPP_StreamAsFile'>
    <retval type='v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='r*' type64='r*' />
  </function>
  <function name='NPP_URLNotify'>
    <retval type='v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='r*' type64='r*' />
    <arg type='s' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_Write'>
    <retval type='i' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='i' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_WriteReady'>
    <retval type='i' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
  </function>
  <function name='WebConvertNSImageToCGImageRef'>
    <retval type='^{CGImage=}' type64='^{CGImage=}' />
    <arg type='@' />
  </function>
  <function name='WebInitForCarbon'>
    <retval type='v' />
  </function>
  <class name='WebDownloadDelegate'>
    <method selector='downloadWindowForAuthenticationSheet:' type='@@:@' />
  </class>
  <class name='WebFrameLoadDelegate'>
    <method selector='webView:didCancelClientRedirectForFrame:' type='v@:@@' />
    <method selector='webView:didChangeLocationWithinPageForFrame:' type='v@:@@' />
    <method selector='webView:didCommitLoadForFrame:' type='v@:@@' />
    <method selector='webView:didFailLoadWithError:forFrame:' type='v@:@@@' />
    <method selector='webView:didFailProvisionalLoadWithError:forFrame:' type='v@:@@@' />
    <method selector='webView:didFinishLoadForFrame:' type='v@:@@' />
    <method selector='webView:didReceiveIcon:forFrame:' type='v@:@@@' />
    <method selector='webView:didReceiveServerRedirectForProvisionalLoadForFrame:' type='v@:@@' />
    <method selector='webView:didReceiveTitle:forFrame:' type='v@:@@@' />
    <method selector='webView:didStartProvisionalLoadForFrame:' type='v@:@@' />
    <method selector='webView:willCloseFrame:' type='v@:@@' />
    <method selector='webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:' type='v@:@@d@@' />
    <method selector='webView:windowScriptObjectAvailable:' type='v@:@@' />
  </class>
  <class name='WebJavaPlugIn'>
    <method selector='webPlugInCallJava:isStatic:returnType:method:arguments:callingURL:exceptionDescription:' type='(jvalue=CcSsiqfd^{_jobject})@:^{_jobject=}Bi^{_jmethodID=}^(jvalue=CcSsiqfd^{_jobject})@^@' />
    <method selector='webPlugInGetApplet' type='^{_jobject=}@:' />
  </class>
  <class name='WebPlugIn'>
    <method selector='objectForWebScript' type='@@:' />
    <method selector='webPlugInDestroy' type='v@:' />
    <method selector='webPlugInInitialize' type='v@:' />
    <method selector='webPlugInSetIsSelected:' type='v@:B' />
    <method selector='webPlugInStart' type='v@:' />
    <method selector='webPlugInStop' type='v@:' />
  </class>
  <class name='WebPlugInContainer'>
    <method selector='webFrame' type='@@:' />
    <method selector='webPlugInContainerLoadRequest:inFrame:' type='v@:@@' />
    <method selector='webPlugInContainerSelectionColor' type='@@:' />
    <method selector='webPlugInContainerShowStatus:' type='v@:@' />
  </class>
  <class name='WebPolicyDelegate'>
    <method selector='webView:decidePolicyForMIMEType:request:frame:decisionListener:' type='v@:@@@@@' />
    <method selector='webView:decidePolicyForNavigationAction:request:frame:decisionListener:' type='v@:@@@@@' />
    <method selector='webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:' type='v@:@@@@@' />
    <method selector='webView:unableToImplementPolicyWithError:frame:' type='v@:@@@' />
  </class>
  <class name='WebResourceLoadDelegate'>
    <method selector='webView:identifierForInitialRequest:fromDataSource:' type='@@:@@@' />
    <method selector='webView:plugInFailedWithError:dataSource:' type='v@:@@@' />
    <method selector='webView:resource:didCancelAuthenticationChallenge:fromDataSource:' type='v@:@@@@' />
    <method selector='webView:resource:didFailLoadingWithError:fromDataSource:' type='v@:@@@@' />
    <method selector='webView:resource:didFinishLoadingFromDataSource:' type='v@:@@@' />
    <method selector='webView:resource:didReceiveAuthenticationChallenge:fromDataSource:' type='v@:@@@@' />
    <method selector='webView:resource:didReceiveContentLength:fromDataSource:' type='v@:@@i@' type64='v@:@@q@' />
    <method selector='webView:resource:didReceiveResponse:fromDataSource:' type='v@:@@@@' />
    <method selector='webView:resource:willSendRequest:redirectResponse:fromDataSource:' type='@@:@@@@@' />
  </class>
  <class name='WebScripting'>
    <method selector='finalizeForWebScript' type='v@:' />
    <method selector='invokeDefaultMethodWithArguments:' type='@@:@' />
    <method selector='invokeUndefinedMethodFromWebScript:withArguments:' type='@@:@@' />
    <method class_method='true' selector='isKeyExcludedFromWebScript:' type='B@:*' />
    <method class_method='true' selector='isSelectorExcludedFromWebScript:' type='B@::' />
    <method class_method='true' selector='webScriptNameForKey:' type='@@:*' />
    <method class_method='true' selector='webScriptNameForSelector:' type='@@::' />
  </class>
  <class name='WebUIDelegate'>
    <method selector='webView:contextMenuItemsForElement:defaultMenuItems:' type='@@:@@@' />
    <method selector='webView:createWebViewModalDialogWithRequest:' type='@@:@@' />
    <method selector='webView:createWebViewWithRequest:' type='@@:@@' />
    <method selector='webView:dragDestinationActionMaskForDraggingInfo:' type='I@:@@' />
    <method selector='webView:dragSourceActionMaskForPoint:' type='I@:@{_NSPoint=ff}' type64='I@:@{CGPoint=dd}' />
    <method selector='webView:drawFooterInRect:' type='v@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='webView:drawHeaderInRect:' type='v@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='webView:makeFirstResponder:' type='v@:@@' />
    <method selector='webView:mouseDidMoveOverElement:modifierFlags:' type='v@:@@I' type64='v@:@@Q' />
    <method selector='webView:printFrameView:' type='v@:@@' />
    <method selector='webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:' type='B@:@@@' />
    <method selector='webView:runJavaScriptAlertPanelWithMessage:' type='v@:@@' />
    <method selector='webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:' type='v@:@@@' />
    <method selector='webView:runJavaScriptConfirmPanelWithMessage:' type='B@:@@' />
    <method selector='webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:' type='B@:@@@' />
    <method selector='webView:runJavaScriptTextInputPanelWithPrompt:defaultText:' type='@@:@@@' />
    <method selector='webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:' type='@@:@@@@' />
    <method selector='webView:runOpenPanelForFileButtonWithResultListener:' type='v@:@@' />
    <method selector='webView:setContentRect:' type='v@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='webView:setFrame:' type='v@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='webView:setResizable:' type='v@:@B' />
    <method selector='webView:setStatusBarVisible:' type='v@:@B' />
    <method selector='webView:setStatusText:' type='v@:@@' />
    <method selector='webView:setToolbarsVisible:' type='v@:@B' />
    <method selector='webView:shouldPerformAction:fromSender:' type='B@:@:@' />
    <method selector='webView:validateUserInterfaceItem:defaultValidation:' type='B@:@@B' />
    <method selector='webView:willPerformDragDestinationAction:forDraggingInfo:' type='v@:@i@' />
    <method selector='webView:willPerformDragSourceAction:fromPoint:withPasteboard:' type='v@:@i{_NSPoint=ff}@' type64='v@:@i{CGPoint=dd}@' />
    <method selector='webViewAreToolbarsVisible:' type='B@:@' />
    <method selector='webViewClose:' type='v@:@' />
    <method selector='webViewContentRect:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@' />
    <method selector='webViewFirstResponder:' type='@@:@' />
    <method selector='webViewFocus:' type='v@:@' />
    <method selector='webViewFooterHeight:' type='f@:@' />
    <method selector='webViewFrame:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@' />
    <method selector='webViewHeaderHeight:' type='f@:@' />
    <method selector='webViewIsResizable:' type='B@:@' />
    <method selector='webViewIsStatusBarVisible:' type='B@:@' />
    <method selector='webViewRunModal:' type='v@:@' />
    <method selector='webViewShow:' type='v@:@' />
    <method selector='webViewStatusText:' type='@@:@' />
    <method selector='webViewUnfocus:' type='v@:@' />
  </class>
  <class name='WebViewEditingDelegate'>
    <method selector='undoManagerForWebView:' type='@@:@' />
    <method selector='webView:doCommandBySelector:' type='B@:@:' />
    <method selector='webView:shouldApplyStyle:toElementsInDOMRange:' type='B@:@@@' />
    <method selector='webView:shouldBeginEditingInDOMRange:' type='B@:@@' />
    <method selector='webView:shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:' type='B@:@@@IB' type64='B@:@@@QB' />
    <method selector='webView:shouldChangeTypingStyle:toStyle:' type='B@:@@@' />
    <method selector='webView:shouldDeleteDOMRange:' type='B@:@@' />
    <method selector='webView:shouldEndEditingInDOMRange:' type='B@:@@' />
    <method selector='webView:shouldInsertNode:replacingDOMRange:givenAction:' type='B@:@@@i' />
    <method selector='webView:shouldInsertText:replacingDOMRange:givenAction:' type='B@:@@@i' />
    <method selector='webViewDidBeginEditing:' type='v@:@' />
    <method selector='webViewDidChange:' type='v@:@' />
    <method selector='webViewDidChangeSelection:' type='v@:@' />
    <method selector='webViewDidChangeTypingStyle:' type='v@:@' />
    <method selector='webViewDidEndEditing:' type='v@:@' />
  </class>
  <class name='DOMElement'>
    <method selector='hasAttributeNS:'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMImplementation'>
    <method selector='hasFeature:'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMNode'>
    <method selector='isSupported:'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSObject'>
    <method class_method='true' selector='isKeyExcludedFromWebScript:'>
      <retval type='B' />
      <arg index='0' type='r*' />
    </method>
    <method class_method='true' selector='isSelectorExcludedFromWebScript:'>
      <retval type='B' />
      <arg index='0' type=':' />
    </method>
    <method selector='webPlugInCallJava:isStatic:returnType:method:arguments:callingURL:exceptionDescription:'>
      <arg index='0' type='^{_jobject=}' />
      <arg index='1' type='B' />
      <arg index='3' type='^{_jmethodID=}' />
      <arg index='4' type='^(jvalue=CcSsiqfd^{_jobject})' />
      <arg index='6' null_accepted='true' type_modifier='o' />
    </method>
    <method selector='webPlugInGetApplet'>
      <retval type='^{_jobject=}' />
    </method>
    <method class_method='true' selector='webScriptNameForKey:'>
      <arg index='0' type='r*' />
    </method>
    <method class_method='true' selector='webScriptNameForSelector:'>
      <arg index='0' type=':' />
    </method>
    <method selector='webView:doCommandBySelector:'>
      <retval type='B' />
      <arg index='1' type=':' />
    </method>
    <method selector='webView:shouldPerformAction:fromSender:'>
      <retval type='B' />
      <arg index='1' type=':' />
    </method>
  </class>
  <class name='WebHistory'>
    <method selector='loadFromURL:error:'>
      <retval type='B' />
      <arg index='1' null_accepted='true' type_modifier='o' />
    </method>
    <method selector='saveToURL:error:'>
      <retval type='B' />
      <arg index='1' null_accepted='true' type_modifier='o' />
    </method>
  </class>
</signatures>

