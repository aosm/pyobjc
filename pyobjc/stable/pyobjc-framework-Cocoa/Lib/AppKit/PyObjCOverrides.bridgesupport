<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
  <opaque name='NSModalSession' type='^{_NSModalSession=}' type64='^{_NSModalSession=}' />
  <constant name='NSAFMAscender' type='@' />
  <constant name='NSAFMCapHeight' type='@' />
  <constant name='NSAFMCharacterSet' type='@' />
  <constant name='NSAFMDescender' type='@' />
  <constant name='NSAFMEncodingScheme' type='@' />
  <constant name='NSAFMFamilyName' type='@' />
  <constant name='NSAFMFontName' type='@' />
  <constant name='NSAFMFormatVersion' type='@' />
  <constant name='NSAFMFullName' type='@' />
  <constant name='NSAFMItalicAngle' type='@' />
  <constant name='NSAFMMappingScheme' type='@' />
  <constant name='NSAFMNotice' type='@' />
  <constant name='NSAFMUnderlinePosition' type='@' />
  <constant name='NSAFMUnderlineThickness' type='@' />
  <constant name='NSAFMVersion' type='@' />
  <constant name='NSAFMWeight' type='@' />
  <constant name='NSAFMXHeight' type='@' />
  <constant name='NSFontColorAttribute' type='@' />
  <constant name='NSVoiceLanguage' type='@' />
  <string_constant name='NSBeginFunctionKey' nsstring='true' value='&#63274;' />
  <string_constant name='NSBreakFunctionKey' nsstring='true' value='&#63282;' />
  <string_constant name='NSClearDisplayFunctionKey' nsstring='true' value='&#63290;' />
  <string_constant name='NSClearLineFunctionKey' nsstring='true' value='&#63289;' />
  <string_constant name='NSDeleteCharFunctionKey' nsstring='true' value='&#63294;' />
  <string_constant name='NSDeleteFunctionKey' nsstring='true' value='&#63272;' />
  <string_constant name='NSDeleteLineFunctionKey' nsstring='true' value='&#63292;' />
  <string_constant name='NSDownArrowFunctionKey' nsstring='true' value='&#63233;' />
  <string_constant name='NSEndFunctionKey' nsstring='true' value='&#63275;' />
  <string_constant name='NSExecuteFunctionKey' nsstring='true' value='&#63298;' />
  <string_constant name='NSF10FunctionKey' nsstring='true' value='&#63245;' />
  <string_constant name='NSF11FunctionKey' nsstring='true' value='&#63246;' />
  <string_constant name='NSF12FunctionKey' nsstring='true' value='&#63247;' />
  <string_constant name='NSF13FunctionKey' nsstring='true' value='&#63248;' />
  <string_constant name='NSF14FunctionKey' nsstring='true' value='&#63249;' />
  <string_constant name='NSF15FunctionKey' nsstring='true' value='&#63250;' />
  <string_constant name='NSF16FunctionKey' nsstring='true' value='&#63251;' />
  <string_constant name='NSF17FunctionKey' nsstring='true' value='&#63252;' />
  <string_constant name='NSF18FunctionKey' nsstring='true' value='&#63253;' />
  <string_constant name='NSF19FunctionKey' nsstring='true' value='&#63254;' />
  <string_constant name='NSF1FunctionKey' nsstring='true' value='&#63236;' />
  <string_constant name='NSF20FunctionKey' nsstring='true' value='&#63255;' />
  <string_constant name='NSF21FunctionKey' nsstring='true' value='&#63256;' />
  <string_constant name='NSF22FunctionKey' nsstring='true' value='&#63257;' />
  <string_constant name='NSF23FunctionKey' nsstring='true' value='&#63258;' />
  <string_constant name='NSF24FunctionKey' nsstring='true' value='&#63259;' />
  <string_constant name='NSF25FunctionKey' nsstring='true' value='&#63260;' />
  <string_constant name='NSF26FunctionKey' nsstring='true' value='&#63261;' />
  <string_constant name='NSF27FunctionKey' nsstring='true' value='&#63262;' />
  <string_constant name='NSF28FunctionKey' nsstring='true' value='&#63263;' />
  <string_constant name='NSF29FunctionKey' nsstring='true' value='&#63264;' />
  <string_constant name='NSF2FunctionKey' nsstring='true' value='&#63237;' />
  <string_constant name='NSF30FunctionKey' nsstring='true' value='&#63265;' />
  <string_constant name='NSF31FunctionKey' nsstring='true' value='&#63266;' />
  <string_constant name='NSF32FunctionKey' nsstring='true' value='&#63267;' />
  <string_constant name='NSF33FunctionKey' nsstring='true' value='&#63268;' />
  <string_constant name='NSF34FunctionKey' nsstring='true' value='&#63269;' />
  <string_constant name='NSF35FunctionKey' nsstring='true' value='&#63270;' />
  <string_constant name='NSF3FunctionKey' nsstring='true' value='&#63238;' />
  <string_constant name='NSF4FunctionKey' nsstring='true' value='&#63239;' />
  <string_constant name='NSF5FunctionKey' nsstring='true' value='&#63240;' />
  <string_constant name='NSF6FunctionKey' nsstring='true' value='&#63241;' />
  <string_constant name='NSF7FunctionKey' nsstring='true' value='&#63242;' />
  <string_constant name='NSF8FunctionKey' nsstring='true' value='&#63243;' />
  <string_constant name='NSF9FunctionKey' nsstring='true' value='&#63244;' />
  <string_constant name='NSFindFunctionKey' nsstring='true' value='&#63301;' />
  <string_constant name='NSHelpFunctionKey' nsstring='true' value='&#63302;' />
  <string_constant name='NSHomeFunctionKey' nsstring='true' value='&#63273;' />
  <string_constant name='NSImageRepRegistryChangedNotification' nsstring='true' value='NSImageRepRegistryDidChangeNotification' />
  <string_constant name='NSInsertCharFunctionKey' nsstring='true' value='&#63293;' />
  <string_constant name='NSInsertFunctionKey' nsstring='true' value='&#63271;' />
  <string_constant name='NSInsertLineFunctionKey' nsstring='true' value='&#63291;' />
  <string_constant name='NSLeftArrowFunctionKey' nsstring='true' value='&#63234;' />
  <string_constant name='NSMenuFunctionKey' nsstring='true' value='&#63285;' />
  <string_constant name='NSModeSwitchFunctionKey' nsstring='true' value='&#63303;' />
  <string_constant name='NSNextFunctionKey' nsstring='true' value='&#63296;' />
  <string_constant name='NSPageDownFunctionKey' nsstring='true' value='&#63277;' />
  <string_constant name='NSPageUpFunctionKey' nsstring='true' value='&#63276;' />
  <string_constant name='NSPauseFunctionKey' nsstring='true' value='&#63280;' />
  <string_constant name='NSPrevFunctionKey' nsstring='true' value='&#63295;' />
  <string_constant name='NSPrintFunctionKey' nsstring='true' value='&#63288;' />
  <string_constant name='NSPrintScreenFunctionKey' nsstring='true' value='&#63278;' />
  <string_constant name='NSRedoFunctionKey' nsstring='true' value='&#63300;' />
  <string_constant name='NSResetFunctionKey' nsstring='true' value='&#63283;' />
  <string_constant name='NSRightArrowFunctionKey' nsstring='true' value='&#63235;' />
  <string_constant name='NSScrollLockFunctionKey' nsstring='true' value='&#63279;' />
  <string_constant name='NSSelectFunctionKey' nsstring='true' value='&#63297;' />
  <string_constant name='NSStopFunctionKey' nsstring='true' value='&#63284;' />
  <string_constant name='NSSysReqFunctionKey' nsstring='true' value='&#63281;' />
  <string_constant name='NSSystemFunctionKey' nsstring='true' value='&#63287;' />
  <string_constant name='NSUndoFunctionKey' nsstring='true' value='&#63299;' />
  <string_constant name='NSUpArrowFunctionKey' nsstring='true' value='&#63232;' />
  <string_constant name='NSUserFunctionKey' nsstring='true' value='&#63286;' />
  <enum name='NSAppKitVersionNumberWithColumnResizingBrowser' value='685.0' />
  <enum name='NSAppKitVersionNumberWithContinuousScrollingBrowser' value='680.0' />
  <enum name='NSAppKitVersionNumberWithCursorSizeSupport' value='682.0' />
  <enum name='NSAppKitVersionNumberWithCustomSheetPosition' value='686.0' />
  <enum name='NSAppKitVersionNumberWithDirectionalTabs' value='631.0' />
  <enum name='NSAppKitVersionNumberWithPatternColorLeakFix' value='641.0' />
  <enum name='NSDockWindowLevel' value='20' />
  <enum name='NSFloatingWindowLevel' value='3' />
  <enum name='NSMainMenuWindowLevel' value='24' />
  <enum name='NSModalPanelWindowLevel' value='8' />
  <enum name='NSNormalWindowLevel' value='0' />
  <enum name='NSPopUpMenuWindowLevel' value='101' />
  <enum name='NSScreenSaverWindowLevel' value='1000' />
  <enum name='NSStatusWindowLevel' value='25' />
  <enum name='NSSubmenuWindowLevel' value='3' />
  <enum name='NSTornOffMenuWindowLevel' value='3' />
  <function name='NSAccessibilityPostNotification'>
    <retval type='v' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSAccessibilityRaiseBadArgumentException'>
    <retval type='v' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSApplicationMain'>
    <retval type='i' />
    <arg type='i' />
    <arg c_array_length_in_arg='0' type='^*' />
  </function>
  <function name='NSAvailableWindowDepths'>
    <retval c_array_delimited_by_null='true' type='^i' />
  </function>
  <function name='NSBeep'>
    <retval type='v' />
  </function>
  <function name='NSBeginAlertSheet' variadic='true'>
    <retval type='v' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg sel_of_type='v@:@i^v' type=':' />
    <arg type=':' />
    <arg type='^v' type64='^v' />
    <arg printf_format='true' type='@' type64='@' />
  </function>
  <function name='NSBeginCriticalAlertSheet' variadic='true'>
    <retval type='v' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg sel_of_type='v@:@i^v' type=':' />
    <arg type=':' />
    <arg type='^v' type64='^v' />
    <arg printf_format='true' type='@' type64='@' />
  </function>
  <function name='NSBeginInformationalAlertSheet' variadic='true'>
    <retval type='v' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg sel_of_type='v@:@i^v' type=':' />
    <arg type=':' />
    <arg type='^v' type64='^v' />
    <arg printf_format='true' type='@' type64='@' />
  </function>
  <function name='NSBestDepth'>
    <retval type='i' />
    <arg type='@' />
    <arg type='i' type64='i' />
    <arg type='i' type64='i' />
    <arg type='B' />
    <arg type='^B' type64='^B' type_modifier='o' />
  </function>
  <function comment='Need manual wrapping because index=&apos;3&apos; has size count*4+1' name='NSConvertGlyphsToPackedGlyphs'>
    <retval type='i' type64='q' />
    <arg c_array_length_in_arg='1' type='^I' type_modifier='n' />
    <arg type='i' type64='i' />
    <arg type='I' />
    <arg c_array_of_variable_length='true' type='*' type_modifier='o' />
  </function>
  <function name='NSCopyBits'>
    <retval type='v' />
    <arg type='i' type64='i' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSPoint=ff}' type64='{_NSPoint=ff}' />
  </function>
  <function name='NSCountWindows'>
    <retval type='v' />
    <arg type='^i' type64='^i' type_modifier='o' />
  </function>
  <function name='NSCountWindowsForContext'>
    <retval type='v' />
    <arg type='i' type64='i' />
    <arg type='^i' type64='^i' type_modifier='o' />
  </function>
  <function name='NSDisableScreenUpdates'>
    <retval type='v' />
  </function>
  <function name='NSDottedFrameRect'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSDrawBitmap'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='i' type64='i' />
    <arg type='i' type64='i' />
    <arg type='i' type64='i' />
    <arg type='i' type64='i' />
    <arg type='i' type64='i' />
    <arg type='i' type64='i' />
    <arg type='B' />
    <arg type='B' />
    <arg type='@' />
    <arg type='[5*]' />
  </function>
  <function name='NSDrawButton'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSDrawColorTiledRects'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg c_array_length_in_arg='4' type='^i' type64='^i' type_modifier='n' />
    <arg c_array_length_in_arg='4' type='^@' type_modifier='n' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSDrawDarkBezel'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSDrawGrayBezel'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSDrawGroove'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSDrawLightBezel'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSDrawTiledRects'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg c_array_length_in_arg='4' type='^i' type64='^i' type_modifier='n' />
    <arg c_array_length_in_arg='4' type='^f' type64='^f' type_modifier='n' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSDrawWhiteBezel'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSDrawWindowBackground'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSEnableScreenUpdates'>
    <retval type='v' />
  </function>
  <function name='NSEraseRect'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSFrameRect'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSFrameRectWithWidth'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='f' type64='f' />
  </function>
  <function name='NSFrameRectWithWidthUsingOperation'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='f' type64='f' />
    <arg type='I' />
  </function>
  <function name='NSGetAlertPanel' variadic='true'>
    <retval type='@' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSGetCriticalAlertPanel' variadic='true'>
    <retval type='@' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSGetInformationalAlertPanel' variadic='true'>
    <retval type='@' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSGetWindowServerMemory'>
    <retval type='i' type64='q' />
    <arg type='i' type64='i' />
    <arg type='^i' type64='^i' type_modifier='o' />
    <arg type='^i' type64='^i' type_modifier='o' />
    <arg type='^@' type_modifier='o' />
  </function>
  <function name='NSHighlightRect'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSInterfaceStyleForKey'>
    <retval type='I' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function comment='need manual wrapper' name='NSOpenGLGetOption'>
    <retval type='v' />
    <arg type='i' />
    <arg type='^i' type_modifier='o' />
  </function>
  <function comment='need manual wrapper' name='NSOpenGLGetVersion'>
    <retval type='v' />
    <arg type='^i' type_modifier='o' />
    <arg type='^i' type_modifier='o' />
  </function>
  <function name='NSOpenGLSetOption'>
    <retval type='v' />
    <arg type='i' />
    <arg type='i' />
  </function>
  <function name='NSReadPixel'>
    <retval type='@' />
    <arg type='{_NSPoint=ff}' type64='{_NSPoint=ff}' />
  </function>
  <function name='NSRectClip'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSRectClipList'>
    <retval type='v' />
    <arg c_array_length_in_arg='1' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSRectFill'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
  </function>
  <function name='NSRectFillList'>
    <retval type='v' />
    <arg c_array_length_in_arg='1' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSRectFillListUsingOperation'>
    <retval type='v' />
    <arg c_array_length_in_arg='1' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n' />
    <arg type='i' type64='i' />
    <arg type='I' />
  </function>
  <function name='NSRectFillListWithColors'>
    <retval type='v' />
    <arg c_array_length_in_arg='2' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n' />
    <arg c_array_length_in_arg='2' type='^@' type_modifier='n' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSRectFillListWithColorsUsingOperation'>
    <retval type='v' />
    <arg c_array_length_in_arg='2' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n' />
    <arg c_array_length_in_arg='2' type='^@' type_modifier='n' />
    <arg type='i' type64='i' />
    <arg type='I' />
  </function>
  <function name='NSRectFillListWithGrays'>
    <retval type='v' />
    <arg c_array_length_in_arg='2' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type_modifier='n' />
    <arg c_array_length_in_arg='2' type='^f' type64='^f' type_modifier='n' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSRectFillUsingOperation'>
    <retval type='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' />
    <arg type='I' />
  </function>
  <function name='NSRegisterServicesProvider'>
    <retval type='v' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSReleaseAlertPanel'>
    <retval type='v' />
    <arg type='@' />
  </function>
  <function name='NSRunAlertPanel' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSRunAlertPanelRelativeToWindow' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSRunCriticalAlertPanel' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSRunCriticalAlertPanelRelativeToWindow' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSRunInformationalAlertPanel' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSRunInformationalAlertPanelRelativeToWindow' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
    <arg type='@' />
  </function>
  <function name='NSSetFocusRingStyle'>
    <retval type='v' />
    <arg type='I' />
  </function>
  <function name='NSShowAnimationEffect'>
    <retval type='v' />
    <arg type='I' />
    <arg type='{_NSPoint=ff}' type64='{_NSPoint=ff}' />
    <arg type='{_NSSize=ff}' type64='{_NSSize=ff}' />
    <arg type='@' />
    <arg sel_of_type='v@:^v' type=':' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NSUnregisterServicesProvider'>
    <retval type='v' />
    <arg type='@' />
  </function>
  <function name='NSUpdateDynamicServices'>
    <retval type='v' />
  </function>
  <function name='NSWindowList'>
    <retval type='v' />
    <arg type='i' type64='i' />
    <arg c_array_length_in_arg='0' type='^i' type64='^i' type_modifier='o' />
  </function>
  <function name='NSWindowListForContext'>
    <retval type='v' />
    <arg type='i' type64='i' />
    <arg type='i' type64='i' />
    <arg c_array_length_in_arg='1' type='^i' type64='^i' type_modifier='o' />
  </function>
  <function inline='true' name='NSEventMaskFromType'>
    <retval type='I' type64='Q' />
    <arg type='I' />
  </function>
  <class name='NSAccessibility'>
    <method selector='accessibilityActionDescription:' type='@@:@' />
    <method selector='accessibilityActionNames' type='@@:' />
    <method selector='accessibilityAttributeNames' type='@@:' />
    <method selector='accessibilityAttributeValue:' type='@@:@' />
    <method selector='accessibilityAttributeValue:forParameter:' type='@@:@@' />
    <method selector='accessibilityFocusedUIElement' type='@@:' />
    <method selector='accessibilityHitTest:' type='@@:{_NSPoint=ff}' type64='@@:{CGPoint=dd}' />
    <method selector='accessibilityIsAttributeSettable:' type='B@:@' />
    <method selector='accessibilityIsIgnored' type='B@:' />
    <method selector='accessibilityParameterizedAttributeNames' type='@@:' />
    <method selector='accessibilityPerformAction:' type='v@:@' />
    <method selector='accessibilitySetValue:forAttribute:' type='v@:@@' />
  </class>
  <class name='NSAccessibilityAdditions'>
    <method selector='accessibilitySetOverrideValue:forAttribute:' type='B@:@@' />
  </class>
  <class name='NSAlertDelegate'>
    <method selector='alertShowHelp:' type='B@:@' />
  </class>
  <class name='NSAnimationDelegate'>
    <method selector='animation:didReachProgressMark:' type='v@:@f' />
    <method selector='animation:valueForProgress:' type='f@:@f' />
    <method selector='animationDidEnd:' type='v@:@' />
    <method selector='animationDidStop:' type='v@:@' />
    <method selector='animationShouldStart:' type='B@:@' />
  </class>
  <class name='NSApplicationDelegate'>
    <method selector='application:openFile:' type='B@:@@' />
    <method selector='application:openFileWithoutUI:' type='B@:@@' />
    <method selector='application:openFiles:' type='v@:@@' />
    <method selector='application:openTempFile:' type='B@:@@' />
    <method selector='application:printFile:' type='B@:@@' />
    <method selector='application:printFiles:' type='v@:@@' />
    <method selector='application:printFiles:withSettings:showPrintPanels:' type='I@:@@@B' />
    <method selector='application:willPresentError:' type='@@:@@' />
    <method selector='applicationDockMenu:' type='@@:@' />
    <method selector='applicationOpenUntitledFile:' type='B@:@' />
    <method selector='applicationShouldHandleReopen:hasVisibleWindows:' type='B@:@B' />
    <method selector='applicationShouldOpenUntitledFile:' type='B@:@' />
    <method selector='applicationShouldTerminate:' type='I@:@' />
    <method selector='applicationShouldTerminateAfterLastWindowClosed:' type='B@:@' />
  </class>
  <class name='NSApplicationNotifications'>
    <method selector='applicationDidBecomeActive:' type='v@:@' />
    <method selector='applicationDidChangeScreenParameters:' type='v@:@' />
    <method selector='applicationDidFinishLaunching:' type='v@:@' />
    <method selector='applicationDidHide:' type='v@:@' />
    <method selector='applicationDidResignActive:' type='v@:@' />
    <method selector='applicationDidUnhide:' type='v@:@' />
    <method selector='applicationDidUpdate:' type='v@:@' />
    <method selector='applicationWillBecomeActive:' type='v@:@' />
    <method selector='applicationWillFinishLaunching:' type='v@:@' />
    <method selector='applicationWillHide:' type='v@:@' />
    <method selector='applicationWillResignActive:' type='v@:@' />
    <method selector='applicationWillTerminate:' type='v@:@' />
    <method selector='applicationWillUnhide:' type='v@:@' />
    <method selector='applicationWillUpdate:' type='v@:@' />
  </class>
  <class name='NSApplicationScriptingDelegation'>
    <method selector='application:delegateHandlesKey:' type='B@:@@' />
  </class>
  <class name='NSBrowserDelegate'>
    <method selector='browser:acceptDrop:atRow:column:dropOperation:' type='B@:@@iiI' />
    <method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:' type='B@:@@i@' type64='B@:@@q@' />
    <method selector='browser:createRowsForColumn:inMatrix:' type='v@:@i@' type64='v@:@q@' />
    <method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:' type='@@:@@i@^{_NSPoint=ff}' type64='@@:@@q@^{CGPoint=dd}' />
    <method selector='browser:isColumnValid:' type='B@:@i' type64='B@:@q' />
    <method selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:' type='@@:@@@i' type64='@@:@@@q' />
    <method selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:' type='i@:@iii@' type64='q@:@qqq@' />
    <method selector='browser:numberOfRowsInColumn:' type='i@:@i' type64='q@:@q' />
    <method selector='browser:selectCellWithString:inColumn:' type='B@:@@i' type64='B@:@@q' />
    <method selector='browser:selectRow:inColumn:' type='B@:@ii' type64='B@:@qq' />
    <method selector='browser:shouldShowCellExpansionForRow:column:' type='B@:@ii' type64='B@:@qq' />
    <method selector='browser:shouldSizeColumn:forUserResize:toWidth:' type='f@:@iBf' type64='d@:@qBd' />
    <method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:' type='B@:@@@' />
    <method selector='browser:sizeToFitWidthOfColumn:' type='f@:@i' type64='d@:@q' />
    <method selector='browser:titleOfColumn:' type='@@:@i' type64='@@:@q' />
    <method selector='browser:typeSelectStringForRow:inColumn:' type='@@:@ii' type64='@@:@qq' />
    <method selector='browser:validateDrop:proposedRow:column:dropOperation:' type='I@:@@^i^i^I' />
    <method selector='browser:willDisplayCell:atRow:column:' type='v@:@@ii' type64='v@:@@qq' />
    <method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:' type='B@:@@i@' type64='B@:@@q@' />
    <method selector='browserColumnConfigurationDidChange:' type='v@:@' />
    <method selector='browserDidScroll:' type='v@:@' />
    <method selector='browserWillScroll:' type='v@:@' />
  </class>
  <class name='NSColorPanelResponderMethod'>
    <method selector='changeColor:' type='v@:@' />
  </class>
  <class name='NSComboBoxCellDataSource'>
    <method selector='comboBoxCell:completedString:' type='@@:@@' />
    <method selector='comboBoxCell:indexOfItemWithStringValue:' type='I@:@@' type64='Q@:@@' />
    <method selector='comboBoxCell:objectValueForItemAtIndex:' type='@@:@i' type64='@@:@q' />
    <method selector='numberOfItemsInComboBoxCell:' type='i@:@' type64='q@:@' />
  </class>
  <class name='NSComboBoxDataSource'>
    <method selector='comboBox:completedString:' type='@@:@@' />
    <method selector='comboBox:indexOfItemWithStringValue:' type='I@:@@' type64='Q@:@@' />
    <method selector='comboBox:objectValueForItemAtIndex:' type='@@:@i' type64='@@:@q' />
    <method selector='numberOfItemsInComboBox:' type='i@:@' type64='q@:@' />
  </class>
  <class name='NSComboBoxNotifications'>
    <method selector='comboBoxSelectionDidChange:' type='v@:@' />
    <method selector='comboBoxSelectionIsChanging:' type='v@:@' />
    <method selector='comboBoxWillDismiss:' type='v@:@' />
    <method selector='comboBoxWillPopUp:' type='v@:@' />
  </class>
  <class name='NSControlSubclassDelegate'>
    <method selector='control:didFailToFormatString:errorDescription:' type='B@:@@@' />
    <method selector='control:didFailToValidatePartialString:errorDescription:' type='v@:@@@' />
    <method selector='control:isValidObject:' type='B@:@@' />
    <method selector='control:textShouldBeginEditing:' type='B@:@@' />
    <method selector='control:textShouldEndEditing:' type='B@:@@' />
    <method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:' type='@@:@@@{_NSRange=II}^i' type64='@@:@@@{_NSRange=QQ}^q' />
    <method selector='control:textView:doCommandBySelector:' type='B@:@@:' />
  </class>
  <class name='NSControlSubclassNotifications'>
    <method selector='controlTextDidBeginEditing:' type='v@:@' />
    <method selector='controlTextDidChange:' type='v@:@' />
    <method selector='controlTextDidEndEditing:' type='v@:@' />
  </class>
  <class name='NSDatePickerCellDelegate'>
    <method selector='datePickerCell:validateProposedDateValue:timeInterval:' type='v@:@^@^d' />
  </class>
  <class name='NSDictionaryControllerKeyValuePair'>
    <method selector='isExplicitlyIncluded' type='B@:' />
    <method selector='key' type='@@:' />
    <method selector='localizedKey' type='@@:' />
    <method selector='setKey:' type='v@:@' />
    <method selector='setLocalizedKey:' type='v@:@' />
    <method selector='setValue:' type='v@:@' />
    <method selector='value' type='@@:' />
  </class>
  <class name='NSDraggingDestination'>
    <method selector='concludeDragOperation:' type='v@:@' />
    <method selector='draggingEnded:' type='v@:@' />
    <method selector='draggingEntered:' type='I@:@' />
    <method selector='draggingExited:' type='v@:@' />
    <method selector='draggingUpdated:' type='I@:@' />
    <method selector='performDragOperation:' type='B@:@' />
    <method selector='prepareForDragOperation:' type='B@:@' />
    <method selector='wantsPeriodicDraggingUpdates' type='B@:' />
  </class>
  <class name='NSDraggingSource'>
    <method selector='draggedImage:beganAt:' type='v@:@{_NSPoint=ff}' type64='v@:@{CGPoint=dd}' />
    <method selector='draggedImage:endedAt:deposited:' type='v@:@{_NSPoint=ff}B' type64='v@:@{CGPoint=dd}B' />
    <method selector='draggedImage:endedAt:operation:' type='v@:@{_NSPoint=ff}I' />
    <method selector='draggedImage:movedTo:' type='v@:@{_NSPoint=ff}' type64='v@:@{CGPoint=dd}' />
    <method selector='draggingSourceOperationMaskForLocal:' type='I@:B' />
    <method selector='ignoreModifierKeysWhileDragging' type='B@:' />
    <method selector='namesOfPromisedFilesDroppedAtDestination:' type='@@:@' />
  </class>
  <class name='NSDrawerDelegate'>
    <method selector='drawerShouldClose:' type='B@:@' />
    <method selector='drawerShouldOpen:' type='B@:@' />
    <method selector='drawerWillResizeContents:toSize:' type='{_NSSize=ff}@:@{_NSSize=ff}' type64='{CGSize=dd}@:@{CGSize=dd}' />
  </class>
  <class name='NSDrawerNotifications'>
    <method selector='drawerDidClose:' type='v@:@' />
    <method selector='drawerDidOpen:' type='v@:@' />
    <method selector='drawerWillClose:' type='v@:@' />
    <method selector='drawerWillOpen:' type='v@:@' />
  </class>
  <class name='NSEditor'>
    <method selector='commitEditing' type='B@:' />
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:' type='v@:@:^v' />
    <method selector='discardEditing' type='v@:' />
  </class>
  <class name='NSEditorRegistration'>
    <method selector='objectDidBeginEditing:' type='v@:@' />
    <method selector='objectDidEndEditing:' type='v@:@' />
  </class>
  <class name='NSFontManagerDelegate'>
    <method selector='fontManager:willIncludeFont:' type='B@:@@' />
  </class>
  <class name='NSFontManagerResponderMethod'>
    <method selector='changeFont:' type='v@:@' />
  </class>
  <class name='NSFontPanelValidationAdditions'>
    <method selector='validModesForFontPanel:' type='I@:@' type64='Q@:@' />
  </class>
  <class name='NSImageDelegate'>
    <method selector='image:didLoadPartOfRepresentation:withValidRows:' type='v@:@@i' type64='v@:@@q' />
    <method selector='image:didLoadRepresentation:withStatus:' type='v@:@@I' />
    <method selector='image:didLoadRepresentationHeader:' type='v@:@@' />
    <method selector='image:willLoadRepresentation:' type='v@:@@' />
    <method selector='imageDidNotDraw:inRect:' type='@@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='@@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </class>
  <class name='NSKeyValueBindingCreation'>
    <method selector='bind:toObject:withKeyPath:options:' type='v@:@@@@' />
    <method class_method='true' selector='exposeBinding:' type='v@:@' />
    <method selector='exposedBindings' type='@@:' />
    <method selector='infoForBinding:' type='@@:@' />
    <method selector='optionDescriptionsForBinding:' type='@@:@' />
    <method selector='unbind:' type='v@:@' />
    <method selector='valueClassForBinding:' type='#@:@' />
  </class>
  <class name='NSLayoutManagerDelegate'>
    <method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:' type='v@:@@B' />
    <method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:' type='@@:@@BI^{_NSRange=II}' type64='@@:@@BQ^{_NSRange=QQ}' />
    <method selector='layoutManagerDidInvalidateLayout:' type='v@:@' />
  </class>
  <class name='NSMenuDelegate'>
    <method selector='menu:updateItem:atIndex:shouldCancel:' type='B@:@@iB' type64='B@:@@qB' />
    <method selector='menu:willHighlightItem:' type='v@:@@' />
    <method selector='menuDidClose:' type='v@:@' />
    <method selector='menuHasKeyEquivalent:forEvent:target:action:' type='B@:@@^@^:' />
    <method selector='menuNeedsUpdate:' type='v@:@' />
    <method selector='menuWillOpen:' type='v@:@' />
    <method selector='numberOfItemsInMenu:' type='i@:@' type64='q@:@' />
  </class>
  <class name='NSMenuValidation'>
    <method selector='validateMenuItem:' type='B@:@' />
  </class>
  <class name='NSNibAwaking'>
    <method selector='awakeFromNib' type='v@:' />
  </class>
  <class name='NSOutlineViewDataSource'>
    <method selector='outlineView:acceptDrop:item:childIndex:' type='B@:@@@i' type64='B@:@@@q' />
    <method selector='outlineView:child:ofItem:' type='@@:@i@' type64='@@:@q@' />
    <method selector='outlineView:isItemExpandable:' type='B@:@@' />
    <method selector='outlineView:itemForPersistentObject:' type='@@:@@' />
    <method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:' type='@@:@@@' />
    <method selector='outlineView:numberOfChildrenOfItem:' type='i@:@@' type64='q@:@@' />
    <method selector='outlineView:objectValueForTableColumn:byItem:' type='@@:@@@' />
    <method selector='outlineView:persistentObjectForItem:' type='@@:@@' />
    <method selector='outlineView:setObjectValue:forTableColumn:byItem:' type='v@:@@@@' />
    <method selector='outlineView:sortDescriptorsDidChange:' type='v@:@@' />
    <method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:' type='I@:@@@i' />
    <method selector='outlineView:writeItems:toPasteboard:' type='B@:@@@' />
  </class>
  <class name='NSOutlineViewDelegate'>
    <method selector='outlineView:dataCellForTableColumn:item:' type='@@:@@@' />
    <method selector='outlineView:didClickTableColumn:' type='v@:@@' />
    <method selector='outlineView:didDragTableColumn:' type='v@:@@' />
    <method selector='outlineView:heightOfRowByItem:' type='f@:@@' type64='d@:@@' />
    <method selector='outlineView:isGroupItem:' type='B@:@@' />
    <method selector='outlineView:mouseDownInHeaderOfTableColumn:' type='v@:@@' />
    <method selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:' type='@@:@@@@' />
    <method selector='outlineView:selectionIndexesForProposedSelection:' type='@@:@@' />
    <method selector='outlineView:shouldCollapseItem:' type='B@:@@' />
    <method selector='outlineView:shouldEditTableColumn:item:' type='B@:@@@' />
    <method selector='outlineView:shouldExpandItem:' type='B@:@@' />
    <method selector='outlineView:shouldSelectItem:' type='B@:@@' />
    <method selector='outlineView:shouldSelectTableColumn:' type='B@:@@' />
    <method selector='outlineView:shouldShowCellExpansionForTableColumn:item:' type='B@:@@@' />
    <method selector='outlineView:shouldTrackCell:forTableColumn:item:' type='B@:@@@@' />
    <method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:' type='B@:@@@' />
    <method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:' type='@@:@@^{_NSRect={_NSPoint=ff}{_NSSize=ff}}@@{_NSPoint=ff}' type64='@@:@@^{CGRect={CGPoint=dd}{CGSize=dd}}@@{CGPoint=dd}' />
    <method selector='outlineView:typeSelectStringForTableColumn:item:' type='@@:@@@' />
    <method selector='outlineView:willDisplayCell:forTableColumn:item:' type='v@:@@@@' />
    <method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:' type='v@:@@@@' />
    <method selector='selectionShouldChangeInOutlineView:' type='B@:@' />
  </class>
  <class name='NSOutlineViewNotifications'>
    <method selector='outlineViewColumnDidMove:' type='v@:@' />
    <method selector='outlineViewColumnDidResize:' type='v@:@' />
    <method selector='outlineViewItemDidCollapse:' type='v@:@' />
    <method selector='outlineViewItemDidExpand:' type='v@:@' />
    <method selector='outlineViewItemWillCollapse:' type='v@:@' />
    <method selector='outlineViewItemWillExpand:' type='v@:@' />
    <method selector='outlineViewSelectionDidChange:' type='v@:@' />
    <method selector='outlineViewSelectionIsChanging:' type='v@:@' />
  </class>
  <class name='NSPasteboardOwner'>
    <method selector='pasteboard:provideDataForType:' type='v@:@@' />
    <method selector='pasteboardChangedOwner:' type='v@:@' />
  </class>
  <class name='NSPlaceholders'>
    <method class_method='true' selector='defaultPlaceholderForMarker:withBinding:' type='@@:@@' />
    <method class_method='true' selector='setDefaultPlaceholder:forMarker:withBinding:' type='v@:@@@' />
  </class>
  <class name='NSRuleEditorDelegateMethods'>
    <method selector='ruleEditor:child:forCriterion:withRowType:' type='@@:@i@I' />
    <method selector='ruleEditor:displayValueForCriterion:inRow:' type='@@:@@i' type64='@@:@@q' />
    <method selector='ruleEditor:numberOfChildrenForCriterion:withRowType:' type='i@:@@I' />
    <method selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:' type='@@:@@@i' type64='@@:@@@q' />
    <method selector='ruleEditorRowsDidChange:' type='v@:@' />
  </class>
  <class name='NSSavePanelDelegate'>
    <method selector='panel:compareFilename:with:caseSensitive:' type='i@:@@@B' type64='q@:@@@B' />
    <method selector='panel:directoryDidChange:' type='v@:@@' />
    <method selector='panel:isValidFilename:' type='B@:@@' />
    <method selector='panel:shouldShowFilename:' type='B@:@@' />
    <method selector='panel:userEnteredFilename:confirmed:' type='@@:@@B' />
    <method selector='panel:willExpand:' type='v@:@B' />
    <method selector='panelSelectionDidChange:' type='v@:@' />
  </class>
  <class name='NSServicesRequests'>
    <method selector='readSelectionFromPasteboard:' type='B@:@' />
    <method selector='writeSelectionToPasteboard:types:' type='B@:@@' />
  </class>
  <class name='NSSoundDelegateMethods'>
    <method selector='sound:didFinishPlaying:' type='v@:@B' />
  </class>
  <class name='NSSpeechRecognizerDelegate'>
    <method selector='speechRecognizer:didRecognizeCommand:' type='v@:@@' />
  </class>
  <class name='NSSpeechSynthesizerDelegate'>
    <method selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:' type='v@:@I@@' type64='v@:@Q@@' />
    <method selector='speechSynthesizer:didEncounterSyncMessage:' type='v@:@@' />
    <method selector='speechSynthesizer:didFinishSpeaking:' type='v@:@B' />
    <method selector='speechSynthesizer:willSpeakPhoneme:' type='v@:@s' />
    <method selector='speechSynthesizer:willSpeakWord:ofString:' type='v@:@{_NSRange=II}@' type64='v@:@{_NSRange=QQ}@' />
  </class>
  <class name='NSSplitViewDelegate'>
    <method selector='splitView:canCollapseSubview:' type='B@:@@' />
    <method selector='splitView:onstrainMaxCoordinate:ofSubviewAt:' type='f@:@fi' type64='d@:@dq' />
    <method selector='splitView:onstrainMinCoordinate:ofSubviewAt:' type='f@:@fi' type64='d@:@dq' />
    <method selector='splitView:onstrainSplitPosition:ofSubviewAt:' type='f@:@fi' type64='d@:@dq' />
    <method selector='splitView:resizeSubviewsWithOldSize:' type='v@:@{_NSSize=ff}' type64='v@:@{CGSize=dd}' />
    <method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:' type='B@:@@i' type64='B@:@@q' />
    <method selector='splitViewDidResizeSubviews:' type='v@:@' />
    <method selector='splitViewWillResizeSubviews:' type='v@:@' />
  </class>
  <class name='NSTabViewDelegate'>
    <method selector='tabView:didSelectTabViewItem:' type='v@:@@' />
    <method selector='tabView:shouldSelectTabViewItem:' type='B@:@@' />
    <method selector='tabView:willSelectTabViewItem:' type='v@:@@' />
    <method selector='tabViewDidChangeNumberOfTabViewItems:' type='v@:@' />
  </class>
  <class name='NSTableDataSource'>
    <method selector='numberOfRowsInTableView:' type='i@:@' type64='q@:@' />
    <method selector='tableView:acceptDrop:row:dropOperation:' type='B@:@@iI' />
    <method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:' type='@@:@@@' />
    <method selector='tableView:objectValueForTableColumn:row:' type='@@:@@i' type64='@@:@@q' />
    <method selector='tableView:setObjectValue:forTableColumn:row:' type='v@:@@@i' type64='v@:@@@q' />
    <method selector='tableView:sortDescriptorsDidChange:' type='v@:@@' />
    <method selector='tableView:validateDrop:proposedRow:proposedDropOperation:' type='I@:@@iI' />
    <method selector='tableView:writeRows:toPasteboard:' type='B@:@@@' />
    <method selector='tableView:writeRowsWithIndexes:toPasteboard:' type='B@:@@@' />
  </class>
  <class name='NSTableViewDelegate'>
    <method selector='selectionShouldChangeInTableView:' type='B@:@' />
    <method selector='tableView:dataCellForTableColumn:row:' type='@@:@@i' type64='@@:@@q' />
    <method selector='tableView:didClickTableColumn:' type='v@:@@' />
    <method selector='tableView:didDragTableColumn:' type='v@:@@' />
    <method selector='tableView:heightOfRow:' type='f@:@i' type64='d@:@q' />
    <method selector='tableView:isGroupRow:' type='B@:@i' type64='B@:@q' />
    <method selector='tableView:mouseDownInHeaderOfTableColumn:' type='v@:@@' />
    <method selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:' type='i@:@ii@' type64='q@:@qq@' />
    <method selector='tableView:selectionIndexesForProposedSelection:' type='@@:@@' />
    <method selector='tableView:shouldEditTableColumn:row:' type='B@:@@i' type64='B@:@@q' />
    <method selector='tableView:shouldSelectRow:' type='B@:@i' type64='B@:@q' />
    <method selector='tableView:shouldSelectTableColumn:' type='B@:@@' />
    <method selector='tableView:shouldShowCellExpansionForTableColumn:row:' type='B@:@@i' type64='B@:@@q' />
    <method selector='tableView:shouldTrackCell:forTableColumn:row:' type='B@:@@@i' type64='B@:@@@q' />
    <method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:' type='B@:@@@' />
    <method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:' type='@@:@@^{_NSRect={_NSPoint=ff}{_NSSize=ff}}@i{_NSPoint=ff}' type64='@@:@@^{CGRect={CGPoint=dd}{CGSize=dd}}@q{CGPoint=dd}' />
    <method selector='tableView:typeSelectStringForTableColumn:row:' type='@@:@@i' type64='@@:@@q' />
    <method selector='tableView:willDisplayCell:forTableColumn:row:' type='v@:@@@i' type64='v@:@@@q' />
  </class>
  <class name='NSTableViewNotifications'>
    <method selector='tableViewColumnDidMove:' type='v@:@' />
    <method selector='tableViewColumnDidResize:' type='v@:@' />
    <method selector='tableViewSelectionDidChange:' type='v@:@' />
    <method selector='tableViewSelectionIsChanging:' type='v@:@' />
  </class>
  <class name='NSTextDelegate'>
    <method selector='textDidBeginEditing:' type='v@:@' />
    <method selector='textDidChange:' type='v@:@' />
    <method selector='textDidEndEditing:' type='v@:@' />
    <method selector='textShouldBeginEditing:' type='B@:@' />
    <method selector='textShouldEndEditing:' type='B@:@' />
  </class>
  <class name='NSTextStorageDelegate'>
    <method selector='textStorageDidProcessEditing:' type='v@:@' />
    <method selector='textStorageWillProcessEditing:' type='v@:@' />
  </class>
  <class name='NSTextViewDelegate'>
    <method selector='textView:clickedOnCell:inRect:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='textView:clickedOnCell:inRect:atIndex:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}I' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}Q' />
    <method selector='textView:clickedOnLink:' type='B@:@@' />
    <method selector='textView:clickedOnLink:atIndex:' type='B@:@@I' type64='B@:@@Q' />
    <method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:' type='@@:@@{_NSRange=II}^i' type64='@@:@@{_NSRange=QQ}^q' />
    <method selector='textView:doCommandBySelector:' type='B@:@:' />
    <method selector='textView:doubleClickedOnCell:inRect:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='textView:doubleClickedOnCell:inRect:atIndex:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}I' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}Q' />
    <method selector='textView:draggedCell:inRect:event:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}@' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}@' />
    <method selector='textView:draggedCell:inRect:event:atIndex:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}@I' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}@Q' />
    <method selector='textView:shouldChangeTextInRange:replacementString:' type='B@:@{_NSRange=II}@' type64='B@:@{_NSRange=QQ}@' />
    <method selector='textView:shouldChangeTextInRanges:replacementStrings:' type='B@:@@@' />
    <method selector='textView:shouldChangeTypingAttributes:toAttributes:' type='@@:@@@' />
    <method selector='textView:shouldSetSpellingState:range:' type='i@:@i{_NSRange=II}' type64='q@:@q{_NSRange=QQ}' />
    <method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:' type='{_NSRange=II}@:@{_NSRange=II}{_NSRange=II}' type64='{_NSRange=QQ}@:@{_NSRange=QQ}{_NSRange=QQ}' />
    <method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:' type='@@:@@@' />
    <method selector='textView:willDisplayToolTip:forCharacterAtIndex:' type='@@:@@I' type64='@@:@@Q' />
    <method selector='textView:writablePasteboardTypesForCell:atIndex:' type='@@:@@I' type64='@@:@@Q' />
    <method selector='textView:writeCell:atIndex:toPasteboard:type:' type='B@:@@I@@' type64='B@:@@Q@@' />
    <method selector='textViewDidChangeSelection:' type='v@:@' />
    <method selector='textViewDidChangeTypingAttributes:' type='v@:@' />
    <method selector='undoManagerForTextView:' type='@@:@' />
  </class>
  <class name='NSTokenFieldCellDelegate'>
    <method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type='@@:@@i^i' type64='@@:@@q^q' />
    <method selector='tokenFieldCell:displayStringForRepresentedObject:' type='@@:@@' />
    <method selector='tokenFieldCell:editingStringForRepresentedObject:' type='@@:@@' />
    <method selector='tokenFieldCell:hasMenuForRepresentedObject:' type='B@:@@' />
    <method selector='tokenFieldCell:menuForRepresentedObject:' type='@@:@@' />
    <method selector='tokenFieldCell:readFromPasteboard:' type='@@:@@' />
    <method selector='tokenFieldCell:representedObjectForEditingString:' type='@@:@@' />
    <method selector='tokenFieldCell:shouldAddObjects:atIndex:' type='@@:@@I' type64='@@:@@Q' />
    <method selector='tokenFieldCell:styleForRepresentedObject:' type='I@:@@' />
    <method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:' type='B@:@@@' />
  </class>
  <class name='NSTokenFieldDelegate'>
    <method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type='@@:@@i^i' type64='@@:@@q^q' />
    <method selector='tokenField:displayStringForRepresentedObject:' type='@@:@@' />
    <method selector='tokenField:editingStringForRepresentedObject:' type='@@:@@' />
    <method selector='tokenField:hasMenuForRepresentedObject:' type='B@:@@' />
    <method selector='tokenField:menuForRepresentedObject:' type='@@:@@' />
    <method selector='tokenField:readFromPasteboard:' type='@@:@@' />
    <method selector='tokenField:representedObjectForEditingString:' type='@@:@@' />
    <method selector='tokenField:shouldAddObjects:atIndex:' type='@@:@@I' type64='@@:@@Q' />
    <method selector='tokenField:styleForRepresentedObject:' type='I@:@@' />
    <method selector='tokenField:writeRepresentedObjects:toPasteboard:' type='B@:@@@' />
  </class>
  <class name='NSToolTipOwner'>
    <method selector='view:stringForToolTip:point:userData:' type='@@:@i{_NSPoint=ff}^v' />
  </class>
  <class name='NSToolbarDelegate'>
    <method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:' type='@@:@@B' />
    <method selector='toolbarAllowedItemIdentifiers:' type='@@:@' />
    <method selector='toolbarDefaultItemIdentifiers:' type='@@:@' />
    <method selector='toolbarSelectableItemIdentifiers:' type='@@:@' />
  </class>
  <class name='NSToolbarItemValidation'>
    <method selector='validateToolbarItem:' type='B@:@' />
  </class>
  <class name='NSToolbarNotifications'>
    <method selector='toolbarDidRemoveItem:' type='v@:@' />
    <method selector='toolbarWillAddItem:' type='v@:@' />
  </class>
  <class name='NSWindowDelegate'>
    <method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:' type='B@:@@{_NSPoint=ff}@' type64='B@:@@{CGPoint=dd}@' />
    <method selector='window:shouldPopUpDocumentPathMenu:' type='B@:@@' />
    <method selector='window:willPositionSheet:usingRect:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='windowShouldClose:' type='B@:@' />
    <method selector='windowShouldZoom:toFrame:' type='B@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='B@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='windowWillResize:toSize:' type='{_NSSize=ff}@:@{_NSSize=ff}' type64='{CGSize=dd}@:@{CGSize=dd}' />
    <method selector='windowWillReturnFieldEditor:toObject:' type='@@:@@' />
    <method selector='windowWillReturnUndoManager:' type='@@:@' />
    <method selector='windowWillUseStandardFrame:defaultFrame:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </class>
  <class name='NSWindowNotifications'>
    <method selector='windowDidBecomeKey:' type='v@:@' />
    <method selector='windowDidBecomeMain:' type='v@:@' />
    <method selector='windowDidChangeScreen:' type='v@:@' />
    <method selector='windowDidChangeScreenProfile:' type='v@:@' />
    <method selector='windowDidDeminiaturize:' type='v@:@' />
    <method selector='windowDidEndSheet:' type='v@:@' />
    <method selector='windowDidExpose:' type='v@:@' />
    <method selector='windowDidMiniaturize:' type='v@:@' />
    <method selector='windowDidMove:' type='v@:@' />
    <method selector='windowDidResignKey:' type='v@:@' />
    <method selector='windowDidResignMain:' type='v@:@' />
    <method selector='windowDidResize:' type='v@:@' />
    <method selector='windowDidUpdate:' type='v@:@' />
    <method selector='windowWillBeginSheet:' type='v@:@' />
    <method selector='windowWillClose:' type='v@:@' />
    <method selector='windowWillMiniaturize:' type='v@:@' />
    <method selector='windowWillMove:' type='v@:@' />
  </class>
  <class name='NSATSTypesetter'>
    <method selector='bidiProcessingEnabled'>
      <retval type='B' />
    </method>
    <method selector='characterRangeForGlyphRange:actualGlyphRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
      <arg c_array_length_in_arg='0' index='1' />
      <arg c_array_length_in_arg='0' index='2' />
      <arg c_array_length_in_arg='0' index='3' />
      <arg c_array_length_in_arg='0' index='4' type='^B' />
    </method>
    <method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='layoutParagraphAtPoint:'>
      <arg index='0' type_modifier='N' />
    </method>
    <method selector='lineFragmentRectForProposedRect:remainingRect:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='setBidiLevels:forGlyphRange:'>
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
    </method>
    <method selector='setBidiProcessingEnabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setHardInvalidation:forGlyphRange:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
    </method>
    <method selector='setNotShownAttribute:forGlyphRange:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setUsesFontLeading:'>
      <arg index='0' type='B' />
    </method>
    <method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
      <retval type='B' />
    </method>
    <method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
      <retval type='B' />
    </method>
    <method selector='substituteGlyphsInRange:withGlyphs:'>
      <arg c_array_length_in_arg='0' index='1' type_modifier='n' />
    </method>
    <method selector='usesFontLeading'>
      <retval type='B' />
    </method>
    <method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
      <arg index='0' type_modifier='N' />
      <arg index='2' type_modifier='N' />
      <arg index='3' type_modifier='N' />
    </method>
  </class>
  <class name='NSActionCell'>
    <method selector='setAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSAlert'>
    <method class_method='true' selector='alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:' variadic='true'>
      <arg index='4' printf_format='true' />
    </method>
    <method selector='beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@i^v' />
      <arg index='3' type='^v' />
    </method>
  <method selector='beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@i^v' />
      <arg index='3' type='^v' />
    </method>
  </class>
  <class name='NSApplication'>
    <method selector='beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@i^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@i^v' />
      <arg index='4' type='^v' />
    </method>
    <method class_method='true' selector='detachDrawingThread:toTarget:withObject:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='makeWindowsPerform:inOrder:'>
      <arg index='0' sel_of_type='v@:' />
      <arg index='1' type='B' />
    </method>
    <method selector='sendAction:to:from:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='targetForAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='targetForAction:to:from:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='tryToPerform:with:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSAttributedString'>
    <method selector='URLAtIndex:effectiveRange:'>
      <arg index='1' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' />
    </method>
    <method selector='dataFromRange:documentAttributes:error:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='fileWrapperFromRange:documentAttributes:error:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithData:options:documentAttributes:error:'>
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='initWithData:options:documentAttributes:error:'>
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='initWithDocFormat:documentAttributes:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithHTML:baseURL:documentAttributes:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithHTML:documentAttributes:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithHTML:options:documentAttributes:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithPath:documentAttributes:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithRTF:documentAttributes:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithRTFD:documentAttributes:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithRTFDFileWrapper:documentAttributes:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithURL:documentAttributes:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithURL:options:documentAttributes:error:'>
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
  <method selector='initWithURL:options:documentAttributes:error:'>
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
  </class>
  <class name='NSBezierPath'>
    <method selector='appendBezierPathWithPackedGlyphs:'>
      <arg index='0' type='*' />
    </method>
    <method class_method='true' selector='drawPackedGlyphs:atPoint:'>
      <arg index='0' type='*' />
    </method>
    <method selector='elementAtIndex:associatedPoints:'>
      <arg c_array_of_variable_length='true' index='1' type_modifier='o' />
    </method>
    <method selector='getLineDash:count:phase:'>
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' />
      <arg index='1' type_modifier='N' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='setAssociatedPoints:atIndex:'>
      <arg c_array_of_variable_length='true' index='0' />
    </method>
  </class>
  <class name='NSBitmapImageRep'>
    <method selector='CGImage'>
      <retval type='^{CGImage=}' />
    </method>
    <method selector='bitmapData'>
      <retval c_array_of_variable_length='true' />
    </method>
    <method selector='getBitmapDataPlanes:'>
      <arg c_array_of_variable_length='true' index='0' />
    </method>
    <method selector='getPixel:atX:y:'>
      <arg c_array_of_variable_length='true' index='0' type_modifier='o' />
    </method>
    <method class_method='true' selector='getTIFFCompressionTypes:count:'>
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' />
      <arg c_array_length_in_arg='1' index='1' type_modifier='o' />
    </method>
    <method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:'>
      <arg index='0' type='^*' />
      <arg index='5' type='B' />
      <arg index='6' type='B' />
    </method>
    <method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:'>
      <arg index='0' type='^*' />
      <arg index='5' type='B' />
      <arg index='6' type='B' />
    </method>
    <method selector='initWithCGImage:'>
      <arg index='0' type='^{CGImage=}' />
    </method>
    <method selector='setPixel:atX:y:'>
      <arg index='0' type='^I' type64='^Q' />
    </method>
  </class>
  <class name='NSBrowser'>
    <method selector='draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
      <arg index='3' type_modifier='N' />
    </method>
    <method selector='setDoubleAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSBundle'>
    <method class_method='true' selector='loadNibFile:externalNameTable:withZone:'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSButton'>
    <method selector='getPeriodicDelay:interval:'>
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
  <method selector='getPeriodicDelay:interval:'>
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
  </class>
  <class name='NSCell'>
    <method selector='getPeriodicDelay:interval:'>
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getPeriodicDelay:interval:'>
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='setAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSColor'>
    <method selector='getComponents:'>
      <arg index='0' type='r^f' type64='r^d' />
    </method>
  </class>
  <class name='NSColorPanel'>
    <method selector='setAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSColorSpace'>
    <method selector='CGColorSpace'>
      <retval type='^{CGColorSpace=}' />
    </method>
    <method selector='initWithCGColorSpace:'>
      <arg index='0' type='^{CGColorSpace=}' />
    </method>
  </class>
  <class name='NSControl'>
    <method selector='sendAction:to:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSController'>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
  </class>
  <class name='NSCustomImageRep'>
    <method selector='initWithDrawSelector:delegate:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSDocument'>
    <method selector='autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='dataOfType:error:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='fileWrapperOfType:error:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initForURL:withContentsOfURL:ofType:error:'>
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='initWithContentsOfURL:ofType:error:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithType:error:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'>
      <arg index='1' type='B' />
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'>
      <arg index='1' type='B' />
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='printOperationWithSettings:error:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='readFromData:ofType:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='readFromFileWrapper:ofType:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='readFromURL:ofType:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='revertToContentsOfURL:ofType:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='runModalPrintOperation:delegate:didRunSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='runModalPrintOperation:delegate:didRunSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='saveDocumentWithDelegate:didSaveSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='saveDocumentWithDelegate:didSaveSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg index='4' sel_of_type='v@:@B^v' />
      <arg index='5' type='^v' />
    </method>
    <method selector='saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'>
      <arg index='4' sel_of_type='v@:@B^v' />
      <arg index='5' type='^v' />
    </method>
    <method selector='saveToURL:ofType:forSaveOperation:error:'>
      <retval type='B' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='writeSafelyToURL:ofType:forSaveOperation:error:'>
      <retval type='B' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='writeToURL:ofType:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <retval type='B' />
      <arg index='4' type_modifier='o' />
    </method>
  </class>
  <class name='NSDocumentController'>
    <method selector='closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='makeDocumentForURL:withContentsOfURL:ofType:error:'>
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='makeDocumentWithContentsOfURL:ofType:error:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='makeUntitledDocumentOfType:error:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='openDocumentWithContentsOfURL:display:error:'>
      <arg index='1' type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='openUntitledDocumentAndDisplay:error:'>
      <arg index='0' type='B' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='reopenDocumentForURL:withContentsOfURL:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'>
      <arg index='1' type='B' />
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'>
      <arg index='1' type='B' />
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='typeForContentsOfURL:error:'>
      <arg index='1' type_modifier='o' />
    </method>
  </class>
  <class name='NSEvent'>
    <method class_method='true' selector='enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:'>
      <arg index='8' type='^v' />
    </method>
    <method selector='eventRef'>
      <retval type='r^{OpaqueEventRef=}' />
    </method>
    <method selector='userData'>
      <retval type='^v' />
    </method>
  </class>
  <class name='NSFont'>
    <method selector=''>
      <retval type='B' />
    </method>
    <method selector='getAdvancements:forGlyphs:count:'>
      <arg c_array_length_in_arg='2' index='0' type_modifier='o' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
    </method>
    <method selector='getAdvancements:forGlyphs:count:'>
      <arg c_array_length_in_arg='2' index='0' type_modifier='o' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
    </method>
    <method selector='getAdvancements:forPackedGlyphs:length:'>
      <arg c_array_length_in_arg='2' index='0' type_modifier='o' />
      <arg index='1' type='*' type64='*' />
    </method>
    <method selector='getBoundingRects:forGlyphs:count:'>
      <arg c_array_length_in_arg='2' index='0' type_modifier='o' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
    </method>
    <method selector='getBoundingRects:forGlyphs:count:'>
      <arg c_array_length_in_arg='2' index='0' type_modifier='o' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
    </method>
    <method selector='matrix'>
      <retval c_array_of_fixed_length='6' />
    </method>
    <method selector='positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:'>
      <arg index='3' type_modifier='o' />
      <arg index='4' type='^B' type_modifier='o' />
    </method>
    <method selector='positionsForCompositeSequence:numberOfGlyphs:pointArray:'>
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg c_array_length_in_arg='1' index='2' type_modifier='o' />
    </method>
  </class>
  <class name='NSFontManager'>
    <method selector='setAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSGlyphGenerator'>
    <method selector='generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:'>
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='N' />
    </method>
  </class>
  <class name='NSGradient'>
    <method selector='initWithColors:atLocations:colorSpace:'>
      <arg c_array_length_in_arg='0' index='1' type_modifier='n' />
    </method>
    <method selector='initWithColorsAndLocations:' suggestion='Use initWithColors:atLocation:colorspace:' variadic='true' />
  </class>
  <class name='NSGraphicsContext'>
    <method selector='focusStack'>
      <retval type='^v' />
    </method>
    <method class_method='true' selector='graphicsContextWithGraphicsPort:flipped:'>
      <arg index='0' type='^{CGContext=}' />
      <arg index='1' type='B' />
    </method>
    <method class_method='true' selector='graphicsContextWithGraphicsPort:flipped:'>
      <arg index='0' type='^{CGContext=}' />
      <arg index='1' type='B' />
    </method>
    <method selector='setFocusStack:'>
      <arg index='0' type='^v' />
    </method>
  </class>
  <class name='NSImage'>
    <method selector='initWithIconRef:'>
      <arg index='0' type='^{OpaqueIconRef=}' />
    </method>
  </class>
  <class name='NSLayoutManager'>
    <method selector='boundsRectForTextBlock:atIndex:effectiveRange:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='characterRangeForGlyphRange:actualGlyphRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getGlyphs:range:'>
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' />
    </method>
    <method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
      <arg c_array_length_in_arg='0' index='1' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='2' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='3' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='4' type='^B' type_modifier='o' />
    </method>
    <method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
      <arg c_array_length_in_arg='0' index='1' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='2' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='3' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='4' type='^B' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='5' type_modifier='o' />
    </method>
    <method selector='getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
      <arg index='3' type='r^f' type64='r^d' />
      <arg index='4' type='^I' type64='^Q' />
    </method>
    <method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
      <arg index='0' type='r^I' />
    </method>
    <method selector='invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'>
      <arg index='2' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' />
    </method>
    <method selector='invalidateLayoutForCharacterRange:actualCharacterRange:'>
      <arg index='1' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' />
    </method>
    <method selector='invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:'>
      <arg index='1' type='B' />
      <arg index='2' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' />
    </method>
    <method selector='layoutRectForTextBlock:atIndex:effectiveRange:'>
      <arg index='2' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' />
    </method>
    <method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:'>
      <arg index='1' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' />
    </method>
    <method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <arg index='1' type_modifier='o' />
      <arg index='2' type='B' />
    </method>
    <method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <arg index='1' type_modifier='o' />
      <arg index='2' type='B' />
    </method>
    <method selector='rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:'>
      <retval c_array_length_in_arg='3' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:'>
      <retval c_array_length_in_arg='3' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='setLocations:startingGlyphIndexes:count:forGlyphRange:'>
      <arg c_array_length_in_arg='2' index='0' type_modifier='n' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
    </method>
    <method selector='showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:'>
      <arg index='0' type='*' />
    </method>
    <method selector='temporaryAttribute:atCharacterIndex:effectiveRange:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:'>
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='temporaryAttributesAtCharacterIndex:effectiveRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='textContainerForGlyphAtIndex:effectiveRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <arg index='1' type_modifier='o' />
      <arg index='2' type='B' />
    </method>
  </class>
  <class name='NSMatrix'>
    <method selector='context:'>
      <arg index='0' type='^v' />
    </method>
    <method selector='sendAction:to:forAllCells:'>
      <arg index='0' sel_of_type='v@:@' />
      <arg index='2' type='B' />
    </method>
    <method selector='setDoubleAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='sortUsingSelector:'>
      <arg index='0' sel_of_type='i@:@' />
    </method>
  </class>
  <class name='NSMenu'>
    <method selector='addItemWithTitle:action:keyEquivalent:'>
      <arg index='1' sel_of_type='v@:@' />
    </method>
    <method selector='indexOfItemWithTarget:andAction:'>
      <arg index='1' sel_of_type='v@:@' />
    </method>
    <method selector='insertItemWithTitle:action:keyEquivalent:atIndex:'>
      <arg index='1' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSMenuItem'>
    <method selector='initWithTitle:action:keyEquivalent:'>
      <arg index='1' sel_of_type='v@:@' />
    </method>
    <method selector='setAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSMovie'>
    <method selector='QTMovie'>
      <retval type='^^{MovieType}' />
    </method>
    <method selector='initWithMovie:'>
      <arg index='0' type='^^{MovieType}' />
    </method>
  </class>
  <class name='NSMovieView'>
    <method selector='movieController'>
      <retval type='^{ComponentInstanceRecord=[1l]}' />
    </method>
  </class>
  <class name='NSMutableAttributedString'>
    <method selector='readFromData:options:documentAttributes:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='readFromData:options:documentAttributes:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='readFromData:options:documentAttributes:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='readFromURL:options:documentAttributes:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='readFromURL:options:documentAttributes:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
  <method selector='readFromURL:options:documentAttributes:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
  </class>
  <class name='NSNib'>
    <method selector='instantiateNibWithOwner:topLevelObjects:'>
      <retval type='B' />
      <arg index='1' type_modifier='o' />
    </method>
  </class>
  <class name='NSObject'>
    <method selector='attributedSubstringForProposedRange:actualRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
      <arg index='4' type_modifier='N' />
    </method>
    <method selector='browser:validateDrop:proposedRow:column:dropOperation:'>
      <arg index='2' type_modifier='N' />
      <arg index='3' type_modifier='N' />
      <arg index='4' type_modifier='N' />
    </method>
    <method selector='browser:validateDrop:proposedRow:column:dropOperation:'>
      <arg index='2' type_modifier='N' />
      <arg index='3' type_modifier='N' />
      <arg index='4' type_modifier='N' />
    </method>
    <method selector='browser:validateDrop:proposedRow:column:dropOperation:'>
      <arg index='2' type_modifier='N' />
      <arg index='3' type_modifier='N' />
      <arg index='4' type_modifier='N' />
    </method>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'>
      <arg index='4' type_modifier='N' />
    </method>
    <method selector='control:textView:doCommandBySelector:'>
      <retval type='B' />
      <arg index='2' sel_of_type='v@:@' />
    </method>
    <method selector='datePickerCell:validateProposedDateValue:timeInterval:'>
      <arg index='1' type_modifier='N' />
      <arg index='2' type_modifier='N' />
    </method>
    <method selector='datePickerCell:validateProposedDateValue:timeInterval:'>
      <arg index='1' type_modifier='N' />
      <arg index='2' type_modifier='N' />
    </method>
    <method selector='firstRectForCharacterRange:actualRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'>
      <arg index='2' type='B' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'>
      <arg index='2' type_modifier='N' />
    </method>
    <method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'>
      <arg index='2' type_modifier='N' />
    </method>
    <method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'>
      <arg index='3' type_modifier='N' />
    </method>
    <method selector='textView:doCommandBySelector:'>
      <retval type='B' />
      <arg index='1' sel_of_type='v@:@' />
    </method>
    <method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
      <arg index='3' type_modifier='N' />
    </method>
    <method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
      <arg index='3' type_modifier='N' />
    </method>
    <method selector='view:stringForToolTip:point:userData:'>
      <arg index='3' type='^v' />
    </method>
  </class>
  <class name='NSObjectController'>
    <method selector='fetchWithRequest:merge:error:'>
      <retval type='B' />
      <arg index='1' type='B' />
      <arg index='2' type_modifier='o' />
    </method>
  </class>
  <class name='NSOpenGLContext'>
    <method selector='CGLContextObj'>
      <retval type='^{_CGLContextObject=}' />
    </method>
    <method selector='getValues:forParameter:'>
      <arg index='0' type='^i' />
    </method>
    <method selector='setOffScreen:width:height:rowbytes:'>
      <arg c_array_of_variable_length='true' index='0' />
    </method>
    <method selector='setValues:forParameter:'>
      <arg c_array_delimited_by_null='true' index='0' />
    </method>
  </class>
  <class name='NSOpenGLPixelFormat'>
    <method selector='CGLPixelFormatObj'>
      <retval type='^{_CGLPixelFormatObject=}' />
    </method>
    <method selector='getValues:forAttribute:forVirtualScreen:'>
      <arg index='0' type='^i' />
    </method>
    <method selector='initWithAttributes:'>
      <arg c_array_delimited_by_null='true' index='0' type='r^I' type_modifier='n' />
    </method>
  </class>
  <class name='NSOpenPanel'>
    <method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
      <arg index='4' sel_of_type='v@:@i^v' />
      <arg index='5' type='^v' />
    </method>
    <method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
      <arg index='4' sel_of_type='v@:@i^v' />
      <arg index='5' type='^v' />
    </method>
    <method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg index='5' sel_of_type='v@:@i^v' />
      <arg index='6' type='^v' />
    </method>
  <method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg index='5' sel_of_type='v@:@i^v' />
      <arg index='6' type='^v' />
    </method>
  </class>
  <class name='NSPageLayout'>
    <method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@i^v' />
      <arg index='4' type='^v' />
    </method>
  <method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@i^v' />
      <arg index='4' type='^v' />
    </method>
  </class>
  <class name='NSPathCell'>
    <method selector='setDoubleAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSPathControl'>
    <method selector='setDoubleAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSPersistentDocument'>
    <method selector='configurePersistentStoreCoordinatorForURL:ofType:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'>
      <retval type='B' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='readFromURL:ofType:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='revertToContentsOfURL:ofType:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <retval type='B' />
      <arg index='4' type_modifier='o' />
    </method>
  </class>
  <class name='NSPopUpButton'>
    <method selector='indexOfItemWithTarget:andAction:'>
      <arg index='1' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSPopUpButtonCell'>
    <method selector='indexOfItemWithTarget:andAction:'>
      <arg index='1' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSPrintInfo'>
    <method selector='PMPageFormat'>
      <retval type='^{OpaquePMPageFormat=}' />
    </method>
    <method selector='PMPrintSession'>
      <retval type='^{OpaquePMPrintSession=}' />
    </method>
    <method selector='PMPrintSettings'>
      <retval type='^{OpaquePMPrintSettings=}' />
    </method>
  </class>
  <class name='NSPrintOperation'>
    <method selector='runOperationModalForWindow:delegate:didRunSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
  <method selector='runOperationModalForWindow:delegate:didRunSelector:contextInfo:'>
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
  </class>
  <class name='NSPrintPanel'>
    <method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@i^v' />
      <arg index='4' type='^v' />
    </method>
  <method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:@i^v' />
      <arg index='4' type='^v' />
    </method>
  </class>
  <class name='NSQuickDrawView'>
    <method selector='qdPort'>
      <retval type='^v' />
    </method>
  </class>
  <class name='NSResponder'>
    <method selector='doCommandBySelector:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='noResponderFor:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <arg index='3' sel_of_type='v@:B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='tryToPerform:with:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSSavePanel'>
    <method selector='beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg index='4' sel_of_type='v@:@i^v' />
      <arg index='5' type='^v' />
    </method>
  <method selector='beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <arg index='4' sel_of_type='v@:@i^v' />
      <arg index='5' type='^v' />
    </method>
  </class>
  <class name='NSScreen'>
    <method selector='supportedWindowDepths'>
      <retval c_array_delimited_by_null='true' />
    </method>
  </class>
  <class name='NSSimpleHorizontalTypesetter'>
    <method selector='growGlyphCaches:fillGlyphInfo:'>
      <arg index='1' type='B' />
    </method>
    <method selector='layoutGlyphsInHorizontalLineFragment:baseline:'>
      <arg index='0' type_modifier='N' />
      <arg index='1' type_modifier='N' />
    </method>
    <method selector='layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'>
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='typesetterLaidOneGlyph:'>
      <arg index='0' type_modifier='N' />
    </method>
    <method selector='willSetLineFragmentRect:forGlyphRange:usedRect:'>
      <arg index='0' type_modifier='N' />
      <arg index='2' type_modifier='N' />
    </method>
  </class>
  <class name='NSSpeechSynthesizer'>
    <method selector='objectForProperty:error:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='setObject:forProperty:error:'>
      <retval type='B' />
      <arg index='2' type_modifier='o' />
    </method>
  </class>
  <class name='NSSpellChecker'>
    <method selector='checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:'>
      <arg index='3' type='B' />
      <arg index='5' type_modifier='o' />
    </method>
    <method selector='checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:'>
      <arg index='3' type='B' />
      <arg index='5' type_modifier='o' />
    </method>
  </class>
  <class name='NSStatusItem'>
    <method selector='setAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setDoubleAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSTableView'>
    <method selector='dragImageForRows:event:dragImageOffset:'>
      <arg index='2' type_modifier='N' />
    </method>
    <method selector='dragImageForRowsWithIndexes:tableColumns:event:offset:'>
      <arg index='3' type_modifier='N' />
    </method>
    <method selector='setDoubleAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSTextContainer'>
    <method selector='lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:'>
      <arg index='3' type_modifier='o' />
    </method>
  </class>
  <class name='NSTextView'>
    <method selector='completionsForPartialWordRange:indexOfSelectedItem:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='dragImageForSelectionWithEvent:origin:'>
      <arg index='1' type_modifier='o' />
    </method>
  </class>
  <class name='NSToolbarItem'>
    <method selector='setAction:'>
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSTypesetter'>
    <method selector='characterRangeForGlyphRange:actualGlyphRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
      <arg c_array_length_in_arg='0' index='1' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='2' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='3' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='4' type='^B' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='5' type_modifier='o' />
    </method>
    <method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:'>
      <arg index='0' type_modifier='N' />
      <arg index='1' type_modifier='N' />
      <arg index='2' type_modifier='N' />
    </method>
    <method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='layoutParagraphAtPoint:'>
      <arg index='0' type_modifier='N' />
    </method>
    <method class_method='true' selector='printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:'>
      <arg index='2' type='*' />
    </method>
    <method selector='setBidiLevels:forGlyphRange:'>
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
    </method>
    <method selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
    </method>
    <method selector='substituteGlyphsInRange:withGlyphs:'>
      <arg c_array_length_in_arg='0' index='1' type_modifier='n' />
    </method>
    <method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
      <arg index='0' type_modifier='N' />
      <arg index='2' type_modifier='N' />
      <arg index='3' type_modifier='N' />
    </method>
  </class>
  <class name='NSView'>
    <method selector='addToolTipRect:owner:userData:'>
      <arg index='2' type='^v' />
    </method>
    <method selector='addTrackingRect:owner:userData:assumeInside:'>
      <arg index='2' type='^v' />
      <arg index='3' type='B' />
    </method>
    <method selector='addTrackingRect:owner:userData:assumeInside:'>
      <arg index='2' type='^v' />
      <arg index='3' type='B' />
    </method>
    <method selector='context:'>
      <arg index='0' type='^v' />
    </method>
    <method selector='getRectsBeingDrawn:count:'>
      <arg index='0' type='r^^{_NSRect}' type64='r^^{CGRect}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getRectsExposedDuringLiveResize:count:'>
      <arg index='0' type='r^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='r^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='knowsPageRange:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
    </method>
  </class>
  <class name='NSViewController'>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
  </class>
  <class name='NSWindow'>
    <method selector='tryToPerform:with:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
  </class>
  <class name='NSWorkspace'>
    <method selector='launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:'>
      <retval type='B' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:'>
      <retval type='B' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='typeOfFile:error:'>
      <arg index='1' type_modifier='o' />
    </method>
  </class>
</signatures>

