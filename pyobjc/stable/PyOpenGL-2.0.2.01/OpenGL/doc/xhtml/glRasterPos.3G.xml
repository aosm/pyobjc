<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd">
<html
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:mml="http://www.w3.org/1998/Math/MathML"
><head><title>glRasterPos</title><link rel="stylesheet" href="style.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.59.1"/><link rel="home" href="index.xml" title="PyOpenGL 2.0.1.09 Man Pages"/><link rel="up" href="reference-GL.xml" title="GL"/><link rel="previous" href="glPushName.3G.xml" title="glPushName"/><link rel="next" href="glReadBuffer.3G.xml" title="glReadBuffer"/></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">glRasterPos</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="glPushName.3G.xml">Prev</a> </td><th width="60%" align="center">GL</th><td width="20%" align="right"> <a accesskey="n" href="glReadBuffer.3G.xml">Next</a></td></tr></table><hr/></div><div class="refentry" lang="en"><a name="glRasterPos.3G"/><div class="titlepage"/><div class="refnamediv"><a name="glRasterPos.3G-name"/><h2>Name</h2><p>glRasterPos2d, glRasterPos2f, glRasterPos2i, glRasterPos2s, glRasterPos3d, glRasterPos3f, glRasterPos3i, glRasterPos3s, glRasterPos4d, glRasterPos4f, glRasterPos4i, glRasterPos4s, glRasterPos2dv, glRasterPos2fv, glRasterPos2iv, glRasterPos2sv, glRasterPos3dv, glRasterPos3fv, glRasterPos3iv, glRasterPos3sv, glRasterPos4dv, glRasterPos4fv, glRasterPos4iv, glRasterPos4sv &#8212; specify the raster position for pixel operations</p></div><div class="refsynopsisdiv"><a name="glRasterPos.3G-c_spec"/><h2>C Specification</h2><table class="funcprototype" border="0" cellpadding="0" cellspacing="0"><tr><td valign="top"><code>void <tt>glRasterPos2d</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLdouble <i><tt>x</tt></i>, GLdouble <i><tt>y</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos2f</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLfloat <i><tt>x</tt></i>, GLfloat <i><tt>y</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos2i</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLint <i><tt>x</tt></i>, GLint <i><tt>y</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos2s</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLshort <i><tt>x</tt></i>, GLshort <i><tt>y</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos3d</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLdouble <i><tt>x</tt></i>, GLdouble <i><tt>y</tt></i>, GLdouble <i><tt>z</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos3f</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLfloat <i><tt>x</tt></i>, GLfloat <i><tt>y</tt></i>, GLfloat <i><tt>z</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos3i</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLint <i><tt>x</tt></i>, GLint <i><tt>y</tt></i>, GLint <i><tt>z</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos3s</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLshort <i><tt>x</tt></i>, GLshort <i><tt>y</tt></i>, GLshort <i><tt>z</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos4d</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLdouble <i><tt>x</tt></i>, GLdouble <i><tt>y</tt></i>, GLdouble <i><tt>z</tt></i>, GLdouble <i><tt>w</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos4f</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLfloat <i><tt>x</tt></i>, GLfloat <i><tt>y</tt></i>, GLfloat <i><tt>z</tt></i>, GLfloat <i><tt>w</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos4i</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLint <i><tt>x</tt></i>, GLint <i><tt>y</tt></i>, GLint <i><tt>z</tt></i>, GLint <i><tt>w</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos4s</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>GLshort <i><tt>x</tt></i>, GLshort <i><tt>y</tt></i>, GLshort <i><tt>z</tt></i>, GLshort <i><tt>w</tt></i>);</code></td></tr></table></div><div class="refsynopsisdiv"><a name="glRasterPos.3G-python_spec"/><h2>Python Specification</h2><table class="funcprototype" border="0" cellpadding="0" cellspacing="0"><tr><td valign="top"><code><tt>glRasterPos2d</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos2f</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos2i</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos2s</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos3d</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos3f</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos3i</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos3s</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos4d</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>, <i><tt>w</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos4f</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>, <i><tt>w</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos4i</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>, <i><tt>w</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos4s</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>, <i><tt>w</tt></i>) &#8594; <tt>None</tt></code></td></tr></table></div><div class="refsect1" lang="en"><a name="glRasterPos.3G-parameters"/><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><i><tt>x</tt></i>, </span><span class="term"><i><tt>y</tt></i>, </span><span class="term"><i><tt>z</tt></i>, </span><span class="term"><i><tt>w</tt></i></span></dt><dd>
						Specify the <i><tt>x</tt></i>, <i><tt>y</tt></i>, <i><tt>z</tt></i>, and
						<i><tt>w</tt></i> object coordinates (if present) for the raster position.
					</dd></dl></div></div><div class="refsynopsisdiv"><a name="glRasterPos.3G-c_spec-v"/><h2>C Specification</h2><table class="funcprototype" border="0" cellpadding="0" cellspacing="0"><tr><td valign="top"><code>void <tt>glRasterPos2dv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLdouble *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos2fv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLfloat *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos2iv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLint *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos2sv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLshort *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos3dv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLdouble *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos3fv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLfloat *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos3iv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLint *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos3sv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLshort *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos4dv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLdouble *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos4fv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLfloat *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos4iv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLint *<i><tt>v</tt></i>);</code></td></tr><tr><td valign="top"><code>void <tt>glRasterPos4sv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code>const GLshort *<i><tt>v</tt></i>);</code></td></tr></table></div><div class="refsynopsisdiv"><a name="glRasterPos.3G-python_spec-v"/><h2>Python Specification</h2><table class="funcprototype" border="0" cellpadding="0" cellspacing="0"><tr><td valign="top"><code><tt>glRasterPos2dv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos2fv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos2iv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos2sv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos3dv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos3fv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos3iv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos3sv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos4dv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos4fv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos4iv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr><tr><td valign="top"><code><tt>glRasterPos4sv</tt></code></td><td valign="top"><code>(</code></td><td valign="top"><code><i><tt>v</tt></i>) &#8594; <tt>None</tt></code></td></tr></table></div><div class="refsect1" lang="en"><a name="glRasterPos.3G-parameters-v"/><h2>Parameters</h2><div class="variablelist"><dl><dt><span class="term"><i><tt>v</tt></i></span></dt><dd>
						Specifies a pointer to an array of two, three, or four elements, specifying <i><tt>x</tt></i>,
						<i><tt>y</tt></i>, <i><tt>z</tt></i>, and <i><tt>w</tt></i> coordinates, respectively.
					</dd></dl></div></div><div class="refsect1" lang="en"><a name="glRasterPos.3G-description"/><h2>Description</h2><p>
			The GL maintains a 3D position in window coordinates. This position, called the raster position, is used to position
			pixel and bitmap write operations. It is maintained with subpixel accuracy. See <a href="glBitmap.3G.xml">glBitmap</a>, <a href="glDrawPixels.3G.xml"><tt>glDrawPixels</tt></a>, and <a href="glCopyPixels.3G.xml"><tt>glCopyPixels</tt></a>.
		</p><p>
			The current raster position consists of three window coordinates (<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>x</mml:mi>
				</mml:math>, <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>y</mml:mi>
				</mml:math>, <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>z</mml:mi>
				</mml:math>), a clip coordinate value (<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>w</mml:mi>
				</mml:math>), an eye coordinate distance, a valid bit, and associated color data and texture coordinates. The
			<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>w</mml:mi>
				</mml:math> coordinate is a clip coordinate, because <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>w</mml:mi>
				</mml:math> is not projected to window coordinates. <tt>glRasterPos4</tt>
			specifies object coordinates <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>x</mml:mi>
				</mml:math>, <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>y</mml:mi>
				</mml:math>, <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>z</mml:mi>
				</mml:math>, and <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>w</mml:mi>
				</mml:math> explicitly. <tt>glRasterPos3</tt> specifies object coordinate
			<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>x</mml:mi>
				</mml:math>, <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>y</mml:mi>
				</mml:math>, and <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>z</mml:mi>
				</mml:math> explicitly, while <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>w</mml:mi>
				</mml:math> is implicitly set to 1. <tt>glRasterPos2</tt> uses the argument
			values for <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>x</mml:mi>
				</mml:math> and <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>y</mml:mi>
				</mml:math> while implicitly setting <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>z</mml:mi>
				</mml:math> and <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
					<mml:mi>w</mml:mi>
				</mml:math> to 0 and 1.
		</p><p>
			The object coordinates presented by <tt>glRasterPos</tt> are treated just like those of
			a <tt>glVertex</tt> command: They are transformed by the current modelview and
			projection matrices and passed to the clipping stage. If the vertex is not culled, then it is projected and scaled to
			window coordinates, which become the new current raster position, and the
			<tt>GL_CURRENT_RASTER_POSITION_VALID</tt> flag is set. If the vertex <span class="emphasis"><em>is</em></span>culled, then
			the valid bit is cleared and the current raster position and associated color and texture coordinates are undefined.
		</p><p>
			The current raster position also includes some associated color data and texture coordinates. If lighting is enabled,
			then <tt>GL_CURRENT_RASTER_COLOR</tt> (in RGBA mode) or <tt>GL_CURRENT_RASTER_INDEX</tt> (in
			color index mode) is set to the color produced by the lighting calculation (see <a href="glLight.3G.xml">glLight</a>, <tt>glLightModel</tt>, and <a href="glShadeModel.3G.xml"><tt>glShadeModel</tt></a>). If lighting is disabled, current color (in RGBA mode, state variable
			<tt>GL_CURRENT_COLOR</tt>) or color index (in color index mode, state variable
			<tt>GL_CURRENT_INDEX</tt>) is used to update the current raster color.
		</p><p>
			Likewise, <tt>GL_CURRENT_RASTER_TEXTURE_COORDS</tt> is updated as a function of
			<tt>GL_CURRENT_TEXTURE_COORDS</tt>, based on the texture matrix and the texture generation functions (see
			<a href="glTexGen.3G.xml">glTexGen</a>). Finally, the distance from the origin of the eye coordinate system to the vertex as transformed by
			only the modelview matrix replaces <tt>GL_CURRENT_RASTER_DISTANCE</tt>.
		</p><p>
			Initially, the current raster position is (0, 0, 0, 1), the current raster distance is 0, the valid bit is set, the
			associated RGBA color is (1, 1, 1, 1), the associated color index is 1, and the associated texture coordinates are (0,
			0, 0, 1). In RGBA mode, <tt>GL_CURRENT_RASTER_INDEX</tt> is always 1; in color index mode, the current
			raster RGBA color always maintains its initial value.
		</p></div><div class="refsect1" lang="en"><a name="glRasterPos.3G-notes"/><h2>Notes</h2><p>
			The raster position is modified both by <tt>glRasterPos</tt> and by <a href="glBitmap.3G.xml"><tt>glBitmap</tt></a>.
		</p><p>
			When the raster position coordinates are invalid, drawing commands that are based on the raster position are ignored
			(that is, they do not result in changes to GL state).
		</p><p>
			Calling <a href="glDrawElements.3G.xml"><tt>glDrawElements</tt></a>, or <a href="glDrawRangeElements.3G.xml"><tt>glDrawRangeElements</tt></a> may leave the current color or index indeterminate. If <tt>glRasterPos</tt> is executed while the current color or index is indeterminate, the current
			raster color or current raster index remains indeterminate.
		</p><p>
			To set a valid raster position outside the viewport, first set a valid raster position, then call <a href="glBitmap.3G.xml"><tt>glBitmap</tt></a> with <tt>NULL</tt> as the <i><tt>bitmap</tt></i> parameter.
		</p><p>
			When the <tt>GL_ARB_imaging</tt> extension is supported, there are distinct raster texture coordinates for
			each texture unit. Each texture unit's current ratster texture coordinates are updated by <tt>glRasterPos</tt>.
		</p></div><div class="refsect1" lang="en"><a name="glRasterPos.3G-errors"/><h2>Errors</h2><p>
			<tt>GL_INVALID_OPERATION</tt> is generated if <tt>glRasterPos</tt> is
			executed between the execution of <a href="glBegin.3G.xml"><tt>glBegin</tt></a> and the corresponding execution of
			<a href="glBegin.3G.xml"><tt>glEnd</tt></a>.
		</p></div><div class="refsect1" lang="en"><a name="glRasterPos.3G-associated_gets"/><h2>Associated Gets</h2><p>
			<tt>glGet</tt> with argument <tt>GL_CURRENT_RASTER_POSITION</tt>
		</p><p>
			<tt>glGet</tt> with argument <tt>GL_CURRENT_RASTER_POSITION_VALID</tt>
		</p><p>
			<tt>glGet</tt> with argument <tt>GL_CURRENT_RASTER_DISTANCE</tt>
		</p><p>
			<tt>glGet</tt> with argument <tt>GL_CURRENT_RASTER_COLOR</tt>
		</p><p>
			<tt>glGet</tt> with argument <tt>GL_CURRENT_RASTER_INDEX</tt>
		</p><p>
			<tt>glGet</tt> with argument <tt>GL_CURRENT_RASTER_TEXTURE_COORDS</tt>
		</p></div><div class="refsect1" lang="en"><a name="glRasterPos.3G-see_also"/><h2>See Also</h2><p>
			<span class="simplelist"><a href="glBitmap.3G.xml">glBitmap</a>, <a href="glCopyPixels.3G.xml">glCopyPixels</a>, <a href="glDrawArrays.3G.xml">glDrawArrays</a>, <a href="glDrawElements.3G.xml">glDrawElements</a>, <a href="glDrawRangeElements.3G.xml">glDrawRangeElements</a>, <a href="glDrawPixels.3G.xml">glDrawPixels</a>, <a href="glTexCoord.3G.xml">glTexCoord</a>, <a href="glTexGen.3G.xml">glTexGen</a>, <a href="glVertex.3G.xml">glVertex</a></span>
		</p></div></div><div class="navfooter"><hr/><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="glPushName.3G.xml">Prev</a> </td><td width="20%" align="center"><a accesskey="u" href="reference-GL.xml">Up</a></td><td width="40%" align="right"> <a accesskey="n" href="glReadBuffer.3G.xml">Next</a></td></tr><tr><td width="40%" align="left" valign="top">glPushName </td><td width="20%" align="center"><a accesskey="h" href="index.xml">Home</a></td><td width="40%" align="right" valign="top"> glReadBuffer</td></tr></table></div></body></html>