/*
# AUTOGENERATED DO NOT EDIT

# If you edit this file, delete the AUTOGENERATED line to prevent re-generation
# BUILD api_versions [0x001]
*/

%module vertex_shader

#define __version__ "$Revision: 1.1.2.1 $"
#define __date__ "$Date: 2004/11/15 07:38:07 $"
#define __api_version__ API_VERSION
#define __author__ "PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>"
#define __doc__ ""

%{
/**
 *
 * GL.ARB.vertex_shader Module for PyOpenGL
 * 
 * Authors: PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>
 * 
***/
%}

%include util.inc
%include gl_exception_handler.inc

%{
#ifdef CGL_PLATFORM
# include <OpenGL/glext.h>
#else
# include <GL/glext.h>
#endif

#if !EXT_DEFINES_PROTO || !defined(GL_ARB_vertex_shader)
DECLARE_VOID_EXT(glBindAttribLocationARB, (GLhandleARB programObj, GLuint index, const GLcharARB *name), (programObj, index, name))
DECLARE_VOID_EXT(glGetActiveAttribARB, (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name), (programObj, index, maxLength, length, size, type, name))
DECLARE_EXT(glGetAttribLocationARB, GLint, 0, (GLhandleARB programObj, const GLcharARB *name), (programObj, name))
#endif
%}

/* FUNCTION DECLARATIONS */
void glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB *name);
DOC(glBindAttribLocationARB, "glBindAttribLocationARB(programObj, index, name)")
void glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
DOC(glGetActiveAttribARB, "glGetActiveAttribARB(programObj, index, maxLength, length, size, type, name)")
GLint glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB *name);
DOC(glGetAttribLocationARB, "glGetAttribLocationARB(programObj, name)")

/* CONSTANT DECLARATIONS */
#define           GL_VERTEX_SHADER_ARB 0x8B31
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
#define      GL_MAX_VARYING_FLOATS_ARB 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 0x8B89
#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A


%{
static char *proc_names[] =
{
#if !EXT_DEFINES_PROTO || !defined(GL_ARB_vertex_shader)
"glBindAttribLocationARB",
"glGetActiveAttribARB",
"glGetAttribLocationARB",
#endif
	NULL
};

#define glInitVertexShaderARB() InitExtension("GL_ARB_vertex_shader", proc_names)
%}

int glInitVertexShaderARB();
DOC(glInitVertexShaderARB, "glInitVertexShaderARB() -> bool")

%{
PyObject *__info()
{
	if (glInitVertexShaderARB())
	{
		PyObject *info = PyList_New(0);
		return info;
	}
	
	Py_INCREF(Py_None);
	return Py_None;
}
%}

PyObject *__info();

