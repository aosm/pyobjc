/*
# AUTOGENERATED DO NOT EDIT

# If you edit this file, delete the AUTOGENERATED line to prevent re-generation
# BUILD api_versions [0x001]
*/

%module element_array

#define __version__ "$Revision: 1.1.2.1 $"
#define __date__ "$Date: 2004/11/15 07:38:07 $"
#define __api_version__ API_VERSION
#define __author__ "PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>"
#define __doc__ ""

%{
/**
 *
 * GL.APPLE.element_array Module for PyOpenGL
 * 
 * Authors: PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>
 * 
***/
%}

%include util.inc
%include gl_exception_handler.inc

%{
#ifdef CGL_PLATFORM
# include <OpenGL/glext.h>
#else
# include <GL/glext.h>
#endif

#if !EXT_DEFINES_PROTO || !defined(GL_APPLE_element_array)
DECLARE_VOID_EXT(glElementPointerAPPLE, (GLenum type, const GLvoid *pointer), (type, pointer))
DECLARE_VOID_EXT(glDrawElementArrayAPPLE, (GLenum mode, GLint first, GLsizei count), (mode, first, count))
DECLARE_VOID_EXT(glDrawRangeElementArrayAPPLE, (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count), (mode, start, end, first, count))
DECLARE_VOID_EXT(glMultiDrawElementArrayAPPLE, (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount), (mode, first, count, primcount))
DECLARE_VOID_EXT(glMultiDrawRangeElementArrayAPPLE, (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount), (mode, start, end, first, count, primcount))
#endif
%}

/* FUNCTION DECLARATIONS */
void glElementPointerAPPLE(GLenum type, const GLvoid *pointer);
DOC(glElementPointerAPPLE, "glElementPointerAPPLE(type, pointer)")
void glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);
DOC(glDrawElementArrayAPPLE, "glDrawElementArrayAPPLE(mode, first, count)")
void glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
DOC(glDrawRangeElementArrayAPPLE, "glDrawRangeElementArrayAPPLE(mode, start, end, first, count)")
void glMultiDrawElementArrayAPPLE(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
DOC(glMultiDrawElementArrayAPPLE, "glMultiDrawElementArrayAPPLE(mode, first, count, primcount)")
void glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
DOC(glMultiDrawRangeElementArrayAPPLE, "glMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount)")

/* CONSTANT DECLARATIONS */
#define         GL_ELEMENT_ARRAY_APPLE 0x8768
#define    GL_ELEMENT_ARRAY_TYPE_APPLE 0x8769
#define GL_ELEMENT_ARRAY_POINTER_APPLE 0x876A


%{
static char *proc_names[] =
{
#if !EXT_DEFINES_PROTO || !defined(GL_APPLE_element_array)
"glElementPointerAPPLE",
"glDrawElementArrayAPPLE",
"glDrawRangeElementArrayAPPLE",
"glMultiDrawElementArrayAPPLE",
"glMultiDrawRangeElementArrayAPPLE",
#endif
	NULL
};

#define glInitElementArrayAPPLE() InitExtension("GL_APPLE_element_array", proc_names)
%}

int glInitElementArrayAPPLE();
DOC(glInitElementArrayAPPLE, "glInitElementArrayAPPLE() -> bool")

%{
PyObject *__info()
{
	if (glInitElementArrayAPPLE())
	{
		PyObject *info = PyList_New(0);
		return info;
	}
	
	Py_INCREF(Py_None);
	return Py_None;
}
%}

PyObject *__info();

