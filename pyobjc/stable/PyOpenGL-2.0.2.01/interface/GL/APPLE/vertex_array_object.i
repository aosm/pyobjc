/*
# AUTOGENERATED DO NOT EDIT

# If you edit this file, delete the AUTOGENERATED line to prevent re-generation
# BUILD api_versions [0x001]
*/

%module vertex_array_object

#define __version__ "$Revision: 1.1.2.1 $"
#define __date__ "$Date: 2004/11/15 07:38:07 $"
#define __api_version__ API_VERSION
#define __author__ "PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>"
#define __doc__ ""

%{
/**
 *
 * GL.APPLE.vertex_array_object Module for PyOpenGL
 * 
 * Authors: PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>
 * 
***/
%}

%include util.inc
%include gl_exception_handler.inc

%{
#ifdef CGL_PLATFORM
# include <OpenGL/glext.h>
#else
# include <GL/glext.h>
#endif

#if !EXT_DEFINES_PROTO || !defined(GL_APPLE_vertex_array_object)
DECLARE_VOID_EXT(glBindVertexArrayAPPLE, (GLuint array), (array))
DECLARE_VOID_EXT(glDeleteVertexArraysAPPLE, (GLsizei n, const GLuint *arrays), (n, arrays))
DECLARE_VOID_EXT(glGenVertexArraysAPPLE, (GLsizei n, const GLuint *arrays), (n, arrays))
DECLARE_EXT(glIsVertexArrayAPPLE, GLboolean, 0, (GLuint array), (array))
#endif
%}

/* FUNCTION DECLARATIONS */
void glBindVertexArrayAPPLE(GLuint array);
DOC(glBindVertexArrayAPPLE, "glBindVertexArrayAPPLE(array)")
void glDeleteVertexArraysAPPLE(GLsizei n, const GLuint *arrays);
DOC(glDeleteVertexArraysAPPLE, "glDeleteVertexArraysAPPLE(n, arrays)")
void glGenVertexArraysAPPLE(GLsizei n, const GLuint *arrays);
DOC(glGenVertexArraysAPPLE, "glGenVertexArraysAPPLE(n, arrays)")
GLboolean glIsVertexArrayAPPLE(GLuint array);
DOC(glIsVertexArrayAPPLE, "glIsVertexArrayAPPLE(array)")

/* CONSTANT DECLARATIONS */
#define  GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5


%{
static char *proc_names[] =
{
#if !EXT_DEFINES_PROTO || !defined(GL_APPLE_vertex_array_object)
"glBindVertexArrayAPPLE",
"glDeleteVertexArraysAPPLE",
"glGenVertexArraysAPPLE",
"glIsVertexArrayAPPLE",
#endif
	NULL
};

#define glInitVertexArrayObjectAPPLE() InitExtension("GL_APPLE_vertex_array_object", proc_names)
%}

int glInitVertexArrayObjectAPPLE();
DOC(glInitVertexArrayObjectAPPLE, "glInitVertexArrayObjectAPPLE() -> bool")

%{
PyObject *__info()
{
	if (glInitVertexArrayObjectAPPLE())
	{
		PyObject *info = PyList_New(0);
		return info;
	}
	
	Py_INCREF(Py_None);
	return Py_None;
}
%}

PyObject *__info();

