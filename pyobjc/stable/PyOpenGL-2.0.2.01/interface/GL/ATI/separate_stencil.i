/*
# AUTOGENERATED DO NOT EDIT

# If you edit this file, delete the AUTOGENERATED line to prevent re-generation
# BUILD api_versions [0x001]
*/

%module separate_stencil

#define __version__ "$Revision: 1.1.2.1 $"
#define __date__ "$Date: 2004/11/15 07:38:07 $"
#define __api_version__ API_VERSION
#define __author__ "PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>"
#define __doc__ ""

%{
/**
 *
 * GL.ATI.separate_stencil Module for PyOpenGL
 * 
 * Authors: PyOpenGL Developers <pyopengl-devel@lists.sourceforge.net>
 * 
***/
%}

%include util.inc
%include gl_exception_handler.inc

%{
#ifdef CGL_PLATFORM
# include <OpenGL/glext.h>
#else
# include <GL/glext.h>
#endif

#if !EXT_DEFINES_PROTO || !defined(GL_ATI_separate_stencil)
DECLARE_VOID_EXT(glStencilOpSeparateATI, (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass), (face, sfail, dpfail, dppass))
DECLARE_VOID_EXT(glStencilFuncSeparateATI, (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask), (frontfunc, backfunc, ref, mask))
#endif
%}

/* FUNCTION DECLARATIONS */
void glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
DOC(glStencilOpSeparateATI, "glStencilOpSeparateATI(face, sfail, dpfail, dppass)")
void glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
DOC(glStencilFuncSeparateATI, "glStencilFuncSeparateATI(frontfunc, backfunc, ref, mask)")

/* CONSTANT DECLARATIONS */
#define       GL_STENCIL_BACK_FUNC_ATI 0x8800
#define       GL_STENCIL_BACK_FAIL_ATI 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803


%{
static char *proc_names[] =
{
#if !EXT_DEFINES_PROTO || !defined(GL_ATI_separate_stencil)
"glStencilOpSeparateATI",
"glStencilFuncSeparateATI",
#endif
	NULL
};

#define glInitSeparateStencilATI() InitExtension("GL_ATI_separate_stencil", proc_names)
%}

int glInitSeparateStencilATI();
DOC(glInitSeparateStencilATI, "glInitSeparateStencilATI() -> bool")

%{
PyObject *__info()
{
	if (glInitSeparateStencilATI())
	{
		PyObject *info = PyList_New(0);
		return info;
	}
	
	Py_INCREF(Py_None);
	return Py_None;
}
%}

PyObject *__info();

